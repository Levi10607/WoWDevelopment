{
	"scope": "source.lua - entity - punctuation - keyword - string",
	"completions": [
		{
			"trigger": "Path:CreateControlPoint\t([\"name\"], [\"template\"], [order])",
			"contents": "${1:Path}:CreateControlPoint(${2:[\"name\"]}, ${3:[\"template\"]}, ${4:[order]})$0",
		},
		{
			"trigger": "Path:GetControlPoints\t()",
			"contents": "${1:Path}:GetControlPoints()$0",
		},
		{
			"trigger": "Path:GetCurve\t()",
			"contents": "${1:Path}:GetCurve()$0",
		},
		{
			"trigger": "Path:GetDebugName\t()",
			"contents": "${1:Path}:GetDebugName()$0",
		},
		{
			"trigger": "Path:GetDuration\t()",
			"contents": "${1:Path}:GetDuration()$0",
		},
		{
			"trigger": "Path:GetElapsed\t()",
			"contents": "${1:Path}:GetElapsed()$0",
		},
		{
			"trigger": "Path:GetEndDelay\t()",
			"contents": "${1:Path}:GetEndDelay()$0",
		},
		{
			"trigger": "Path:GetMaxOrder\t()",
			"contents": "${1:Path}:GetMaxOrder()$0",
		},
		{
			"trigger": "Path:GetName\t()",
			"contents": "${1:Path}:GetName()$0",
		},
		{
			"trigger": "Path:GetObjectType\t()",
			"contents": "${1:Path}:GetObjectType()$0",
		},
		{
			"trigger": "Path:GetOrder\t()",
			"contents": "${1:Path}:GetOrder()$0",
		},
		{
			"trigger": "Path:GetParent\t()",
			"contents": "${1:Path}:GetParent()$0",
		},
		{
			"trigger": "Path:GetProgress\t()",
			"contents": "${1:Path}:GetProgress()$0",
		},
		{
			"trigger": "Path:GetRegionParent\t()",
			"contents": "${1:Path}:GetRegionParent()$0",
		},
		{
			"trigger": "Path:GetScript\t(\"scriptType\")",
			"contents": "${1:Path}:GetScript(\"${2:scriptType}\")$0",
		},
		{
			"trigger": "Path:GetSmoothing\t()",
			"contents": "${1:Path}:GetSmoothing()$0",
		},
		{
			"trigger": "Path:GetSmoothProgress\t()",
			"contents": "${1:Path}:GetSmoothProgress()$0",
		},
		{
			"trigger": "Path:GetStartDelay\t()",
			"contents": "${1:Path}:GetStartDelay()$0",
		},
		{
			"trigger": "Path:GetTarget\t()",
			"contents": "${1:Path}:GetTarget()$0",
		},
		{
			"trigger": "Path:HasScript\t(\"scriptType\")",
			"contents": "${1:Path}:HasScript(\"${2:scriptType}\")$0",
		},
		{
			"trigger": "Path:HookScript\t(\"scriptType\", handler)",
			"contents": "${1:Path}:HookScript(\"${2:scriptType}\", ${3:handler})$0",
		},
		{
			"trigger": "Path:IsDelaying\t()",
			"contents": "${1:Path}:IsDelaying()$0",
		},
		{
			"trigger": "Path:IsDone\t()",
			"contents": "${1:Path}:IsDone()$0",
		},
		{
			"trigger": "Path:IsForbidden\t()",
			"contents": "${1:Path}:IsForbidden()$0",
		},
		{
			"trigger": "Path:IsObjectType\t(\"type\")",
			"contents": "${1:Path}:IsObjectType(\"${2:type}\")$0",
		},
		{
			"trigger": "Path:IsPaused\t()",
			"contents": "${1:Path}:IsPaused()$0",
		},
		{
			"trigger": "Path:IsPlaying\t()",
			"contents": "${1:Path}:IsPlaying()$0",
		},
		{
			"trigger": "Path:IsStopped\t()",
			"contents": "${1:Path}:IsStopped()$0",
		},
		{
			"trigger": "Path:Pause\t()",
			"contents": "${1:Path}:Pause()$0",
		},
		{
			"trigger": "Path:Play\t()",
			"contents": "${1:Path}:Play()$0",
		},
		{
			"trigger": "Path:Restart\t()",
			"contents": "${1:Path}:Restart()$0",
		},
		{
			"trigger": "Path:SetChildKey\t(key)",
			"contents": "${1:Path}:SetChildKey((${2:key})$0",
		},
		{
			"trigger": "Path:SetCurve\t(\"curveType\")",
			"contents": "${1:Path}:SetCurve(\"${2:curveType}\")$0",
		},
		{
			"trigger": "Path:SetDuration\t(duration)",
			"contents": "${1:Path}:SetDuration(${2:duration})$0",
		},
		{
			"trigger": "Path:SetEndDelay\t(delay)",
			"contents": "${1:Path}:SetEndDelay(${2:delay})$0",
		},
		{
			"trigger": "Path:SetOrder\t(order)",
			"contents": "${1:Path}:SetOrder(${2:order})$0",
		},
		{
			"trigger": "Path:SetParent\t(frame)",
			"contents": "${1:Path}:SetParent(${2:frame})$0",
		},
		{
			"trigger": "Path:SetScript\t(\"scriptType\", handler)",
			"contents": "${1:Path}:SetScript(\"${2:scriptType}\", ${3:handler})$0",
		},
		{
			"trigger": "Path:SetSmoothing\t(\"smoothType\")",
			"contents": "${1:Path}:SetSmoothing(\"${2:smoothType}\")$0",
		},
		{
			"trigger": "Path:SetSmoothProgress\t()",
			"contents": "${1:Path}:SetSmoothProgress()$0",
		},
		{
			"trigger": "Path:SetStartDelay\t(delay)",
			"contents": "${1:Path}:SetStartDelay(${2:delay})$0",
		},
		{
			"trigger": "Path:SetTarget\t(region)",
			"contents": "${1:Path}:SetTarget(${2:region})$0",
		},
		{
			"trigger": "Path:SetTargetKey\t(key)",
			"contents": "${1:Path}:SetTargetKey(${2:key})$0",
		},
		{
			"trigger": "Path:Stop\t()",
			"contents": "${1:Path}:Stop()$0",
		},




		{
			"trigger": "_Path:CreateControlPoint\t([\"name\"], [\"template\"], [order])",
			"contents": "${1:controlPoint} = ${2:Path}:CreateControlPoint(${3:[\"name\"]}, ${4:[\"template\"]}, ${5:[order]})$0",
		},
		{
			"trigger": "_Path:GetControlPoints\t()",
			"contents": "${1:...} = ${2:Path}:GetControlPoints()$0",
		},
		{
			"trigger": "_Path:GetCurve\t()",
			"contents": "${1:curveType} = ${2:Path}:GetCurve()$0",
		},
		{
			"trigger": "_Path:GetDebugName\t()",
			"contents": "${1:name} = ${2:Path}:GetDebugName()$0",
		},
		{
			"trigger": "_Path:GetDuration\t()",
			"contents": "${1:duration} = ${2:Path}:GetDuration()$0",
		},
		{
			"trigger": "_Path:GetElapsed\t()",
			"contents": "${1:elapsed} = ${2:Path}:GetElapsed()$0",
		},
		{
			"trigger": "_Path:GetEndDelay\t()",
			"contents": "${1:delay} = ${2:Path}:GetEndDelay()$0",
		},
		{
			"trigger": "_Path:GetMaxOrder\t()",
			"contents": "${1:max} = ${2:Path}:GetMaxOrder()$0",
		},
		{
			"trigger": "_Path:GetName\t()",
			"contents": "${1:name} = ${2:Path}:GetName()$0",
		},
		{
			"trigger": "_Path:GetObjectType\t()",
			"contents": "${1:type} = ${2:Path}:GetObjectType()$0",
		},
		{
			"trigger": "_Path:GetOrder\t()",
			"contents": "${1:order} = ${2:Path}:GetOrder()$0",
		},
		{
			"trigger": "_Path:GetParent\t()",
			"contents": "${1:parent} = ${2:Path}:GetParent()$0",
		},
		{
			"trigger": "_Path:GetProgress\t()",
			"contents": "${1:progress} = ${2:Path}:GetProgress()$0",
		},
		{
			"trigger": "_Path:GetRegionParent\t()",
			"contents": "${1:region} = ${2:Path}:GetRegionParent()$0",
		},
		{
			"trigger": "_Path:GetScript\t(\"scriptType\")",
			"contents": "${1:handler} = ${2:Path}:GetScript(\"${3:scriptType}\")$0",
		},
		{
			"trigger": "_Path:GetSmoothing\t()",
			"contents": "${1:smoothType} = ${2:Path}:GetSmoothing()$0",
		},
		{
			"trigger": "_Path:GetSmoothProgress\t()",
			"contents": "${1:progress} = ${2:Path}:GetSmoothProgress()$0",
		},
		{
			"trigger": "_Path:GetStartDelay\t()",
			"contents": "${1:delay} = ${2:Path}:GetStartDelay()$0",
		},
		{
			"trigger": "_Path:GetTarget\t()",
			"contents": "${1:target} = ${2:Path}:GetTarget()$0",
		},
		{
			"trigger": "_Path:HasScript\t(\"scriptType\")",
			"contents": "${1:hasScript} = ${2:Path}:HasScript(\"${3:scriptType}\")$0",
		},
		{
			"trigger": "_Path:IsDelaying\t()",
			"contents": "${1:delaying} = ${2:Path}:IsDelaying()$0",
		},
		{
			"trigger": "_Path:IsDone\t()",
			"contents": "${1:done} = ${2:Path}:IsDone()$0",
		},
		{
			"trigger": "_Path:IsForbidden\t()",
			"contents": "${1:isForbidden} = ${2:Path}:IsForbidden()$0",
		},
		{
			"trigger": "_Path:IsObjectType\t(\"type\")",
			"contents": "${1:isType} = ${2:Path}:IsObjectType(\"${3:type}\")$0",
		},
		{
			"trigger": "_Path:IsPaused\t()",
			"contents": "${1:paused} = ${2:Path}:IsPaused()$0",
		},
		{
			"trigger": "_Path:IsPlaying\t()",
			"contents": "${1:playing} = ${2:Path}:IsPlaying()$0",
		},
		{
			"trigger": "_Path:IsStopped\t()",
			"contents": "${1:stopped} = ${2:Path}:IsStopped()$0",
		},




		{
			"trigger": "_Path\thelp",
			"contents": "Path = {\n\tinherits = {\n\t\t\"Path\",\n\t\t\"Animation\",\n\t\t\"ScriptObject\",\n\t\t\"ParentedObject\",\n\t\t\"UIObject\",\n\t},\n\thandlers = {\n\t\t[\"OnFinished\"] = \"self, requested\", -- Run when the animation finishes animating\n\t\t[\"OnLoad\"] = \"self\", -- Run when the frame is created\n\t\t[\"OnPause\"] = \"self\", -- Run when the animation begins to play\n\t\t[\"OnPlay\"] = \"self\", -- Run when the animation begins to play\n\t\t[\"OnStop\"] = \"self, requested\", -- Run when the animation is stopped\n\t\t[\"OnUpdate\"] = \"self, elapsed\", -- Run each time the screen is drawn by the game engine\n\t},\n\tmethods = {\n\t\t\"CreateControlPoint\", -- Creates a new control point for the given path\n\t\t\"GetControlPoints\", -- Returns the control points that belong to a given path\n\t\t\"GetCurve\", -- Returns the curveType of the given path\n\t\t\"GetDebugName\", -- Returns the widget object's debug name\n\t\t\"GetDuration\", -- Returns the time for the animation to progress from start to finish\n\t\t\"GetElapsed\", -- Returns the amount of time since the animation began playing\n\t\t\"GetEndDelay\", -- Returns the amount of time the animation delays after finishing\n\t\t\"GetMaxOrder\", -- Returns the maximum order of the control points belonging to a given path\n\t\t\"GetName\", -- Returns the widget object's name\n\t\t\"GetObjectType\", -- Returns the object's widget type\n\t\t\"GetOrder\", -- Returns the order of the animation within it's parent group\n\t\t\"GetParent\", -- Returns the object's parent object\n\t\t\"GetProgress\", -- Returns the progress of an animation, ignoring smoothing effects\n\t\t\"GetRegionParent\", -- Returns the region object on which the animation operates\n\t\t\"GetScript\", -- Returns the widget's handler function for a script\n\t\t\"GetSmoothing\", -- Returns the smoothing type for the animation\n\t\t\"GetSmoothProgress\", -- Returns the progress of the animation (ignoring start and end delay)\n\t\t\"GetStartDelay\", -- Returns the amount of time the animation delays before it's progress begins\n\t\t\"GetTarget\", -- Returns the region affected by this animation\n\t\t\"HasScript\", -- Returns whether the widget supports a script handler\n\t\t\"HookScript\", -- Securely hooks a script handler\n\t\t\"IsDelaying\", -- Returns whether the animation is currently in the middle of a start or end delay\n\t\t\"IsDone\", -- Returns whether the animation has finished playing\n\t\t\"IsForbidden\", -- Returns if this widget's methods may only be called from secure execution paths\n\t\t\"IsObjectType\", -- Returns whether the object belongs to a given widget type\n\t\t\"IsPaused\", -- Returns whether the animation is currently paused\n\t\t\"IsPlaying\", -- Returns whether the animation is currently playing\n\t\t\"IsStopped\", -- Returns whether the animation is currently stopped\n\t\t\"Pause\", -- Pauses the animation\n\t\t\"Play\", -- Plays the animation\n\t\t\"Restart\", -- Restarts the animation\n\t\t\"SetChildKey\", -- Sets the animation to manipulate a particular child member of it's host frame\n\t\t\"SetCurve\", -- Sets the curve type for the path animation\n\t\t\"SetDuration\", -- Sets the time for the animation to progress from start to finish\n\t\t\"SetEndDelay\", -- Sets the amount of time for the animation to delay after finishing\n\t\t\"SetOrder\", -- Sets the order for the animation to play within it's parent group\n\t\t\"SetParent\", -- Sets another frame the parent of this region\n\t\t\"SetScript\", -- Sets the widget's handler function for a script\n\t\t\"SetSmoothing\", -- Sets the smoothing type for the animation\n\t\t\"SetSmoothProgress\", -- Sets the progress of the smoothing type for the animation\n\t\t\"SetStartDelay\", -- Sets the amount of time for the animation to delay before it's progress begins\n\t\t\"SetTarget\", -- Sets the region affected by this animation\n\t\t\"SetTargetKey\", -- Sets the animation to manipulate a particular child member of it's target\n\t\t\"Stop\", -- Stops the animation\n\t},\n}",
		},
	]
}
