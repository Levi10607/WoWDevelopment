{
	"scope": "source.lua - entity - punctuation - keyword - string",
	"completions": [
		{
			"trigger": "Translation:GetDebugName\t()",
			"contents": "${1:Translation}:GetDebugName()$0",
		},
		{
			"trigger": "Translation:GetDuration\t()",
			"contents": "${1:Translation}:GetDuration()$0",
		},
		{
			"trigger": "Translation:GetElapsed\t()",
			"contents": "${1:Translation}:GetElapsed()$0",
		},
		{
			"trigger": "Translation:GetEndDelay\t()",
			"contents": "${1:Translation}:GetEndDelay()$0",
		},
		{
			"trigger": "Translation:GetName\t()",
			"contents": "${1:Translation}:GetName()$0",
		},
		{
			"trigger": "Translation:GetObjectType\t()",
			"contents": "${1:Translation}:GetObjectType()$0",
		},
		{
			"trigger": "Translation:GetOffset\t()",
			"contents": "${1:Translation}:GetOffset()$0",
		},
		{
			"trigger": "Translation:GetOrder\t()",
			"contents": "${1:Translation}:GetOrder()$0",
		},
		{
			"trigger": "Translation:GetParent\t()",
			"contents": "${1:Translation}:GetParent()$0",
		},
		{
			"trigger": "Translation:GetProgress\t()",
			"contents": "${1:Translation}:GetProgress()$0",
		},
		{
			"trigger": "Translation:GetRegionParent\t()",
			"contents": "${1:Translation}:GetRegionParent()$0",
		},
		{
			"trigger": "Translation:GetScript\t(\"scriptType\")",
			"contents": "${1:Translation}:GetScript(\"${2:scriptType}\")$0",
		},
		{
			"trigger": "Translation:GetSmoothing\t()",
			"contents": "${1:Translation}:GetSmoothing()$0",
		},
		{
			"trigger": "Translation:GetSmoothProgress\t()",
			"contents": "${1:Translation}:GetSmoothProgress()$0",
		},
		{
			"trigger": "Translation:GetStartDelay\t()",
			"contents": "${1:Translation}:GetStartDelay()$0",
		},
		{
			"trigger": "Translation:GetTarget\t()",
			"contents": "${1:Translation}:GetTarget()$0",
		},
		{
			"trigger": "Translation:HasScript\t(\"scriptType\")",
			"contents": "${1:Translation}:HasScript(\"${2:scriptType}\")$0",
		},
		{
			"trigger": "Translation:HookScript\t(\"scriptType\", handler)",
			"contents": "${1:Translation}:HookScript(\"${2:scriptType}\", ${3:handler})$0",
		},
		{
			"trigger": "Translation:IsDelaying\t()",
			"contents": "${1:Translation}:IsDelaying()$0",
		},
		{
			"trigger": "Translation:IsDone\t()",
			"contents": "${1:Translation}:IsDone()$0",
		},
		{
			"trigger": "Translation:IsForbidden\t()",
			"contents": "${1:Translation}:IsForbidden()$0",
		},
		{
			"trigger": "Translation:IsObjectType\t(\"type\")",
			"contents": "${1:Translation}:IsObjectType(\"${2:type}\")$0",
		},
		{
			"trigger": "Translation:IsPaused\t()",
			"contents": "${1:Translation}:IsPaused()$0",
		},
		{
			"trigger": "Translation:IsPlaying\t()",
			"contents": "${1:Translation}:IsPlaying()$0",
		},
		{
			"trigger": "Translation:IsStopped\t()",
			"contents": "${1:Translation}:IsStopped()$0",
		},
		{
			"trigger": "Translation:Pause\t()",
			"contents": "${1:Translation}:Pause()$0",
		},
		{
			"trigger": "Translation:Play\t()",
			"contents": "${1:Translation}:Play()$0",
		},
		{
			"trigger": "Translation:Restart\t()",
			"contents": "${1:Translation}:Restart()$0",
		},
		{
			"trigger": "Translation:SetChildKey\t(key)",
			"contents": "${1:Translation}:SetChildKey((${2:key})$0",
		},
		{
			"trigger": "Translation:SetDuration\t(duration)",
			"contents": "${1:Translation}:SetDuration(${2:duration})$0",
		},
		{
			"trigger": "Translation:SetEndDelay\t(delay)",
			"contents": "${1:Translation}:SetEndDelay(${2:delay})$0",
		},
		{
			"trigger": "Translation:SetForbidden\t()",
			"contents": "${1:Translation}:SetForbidden()$0",
		},
		{
			"trigger": "Translation:SetOffset\t(xOffset, yOffset)",
			"contents": "${1:Translation}:SetOffset(${2:xOffset}, ${3:yOffset})$0",
		},
		{
			"trigger": "Translation:SetOrder\t(order)",
			"contents": "${1:Translation}:SetOrder(${2:order})$0",
		},
		{
			"trigger": "Translation:SetParent\t(frame)",
			"contents": "${1:Translation}:SetParent(${2:frame})$0",
		},
		{
			"trigger": "Translation:SetScript\t(\"scriptType\", handler)",
			"contents": "${1:Translation}:SetScript(\"${2:scriptType}\", ${3:handler})$0",
		},
		{
			"trigger": "Translation:SetSmoothing\t(\"smoothType\")",
			"contents": "${1:Translation}:SetSmoothing(\"${2:smoothType}\")$0",
		},
		{
			"trigger": "Translation:SetSmoothProgress\t()",
			"contents": "${1:Translation}:SetSmoothProgress()$0",
		},
		{
			"trigger": "Translation:SetStartDelay\t(delay)",
			"contents": "${1:Translation}:SetStartDelay(${2:delay})$0",
		},
		{
			"trigger": "Translation:SetTarget\t(region)",
			"contents": "${1:Translation}:SetTarget(${2:region})$0",
		},
		{
			"trigger": "Translation:SetTargetKey\t(key)",
			"contents": "${1:Translation}:SetTargetKey(${2:key})$0",
		},
		{
			"trigger": "Translation:Stop\t()",
			"contents": "${1:Translation}:Stop()$0",
		},




		{
			"trigger": "_Translation:GetDebugName\t()",
			"contents": "${1:name} = ${2:Translation}:GetDebugName()$0",
		},
		{
			"trigger": "_Translation:GetDuration\t()",
			"contents": "${1:duration} = ${2:Translation}:GetDuration()$0",
		},
		{
			"trigger": "_Translation:GetElapsed\t()",
			"contents": "${1:elapsed} = ${2:Translation}:GetElapsed()$0",
		},
		{
			"trigger": "_Translation:GetEndDelay\t()",
			"contents": "${1:delay} = ${2:Translation}:GetEndDelay()$0",
		},
		{
			"trigger": "_Translation:GetName\t()",
			"contents": "${1:name} = ${2:Translation}:GetName()$0",
		},
		{
			"trigger": "_Translation:GetObjectType\t()",
			"contents": "${1:type} = ${2:Translation}:GetObjectType()$0",
		},
		{
			"trigger": "_Translation:GetOffset\t()",
			"contents": "${1:xOffset}, ${2:yOffset} = ${3:Translation}:GetOffset()$0",
		},
		{
			"trigger": "_Translation:GetOrder\t()",
			"contents": "${1:order} = ${2:Translation}:GetOrder()$0",
		},
		{
			"trigger": "_Translation:GetParent\t()",
			"contents": "${1:parent} = ${2:Translation}:GetParent()$0",
		},
		{
			"trigger": "_Translation:GetProgress\t()",
			"contents": "${1:progress} = ${2:Translation}:GetProgress()$0",
		},
		{
			"trigger": "_Translation:GetRegionParent\t()",
			"contents": "${1:region} = ${2:Translation}:GetRegionParent()$0",
		},
		{
			"trigger": "_Translation:GetScript\t(\"scriptType\")",
			"contents": "${1:handler} = ${2:Translation}:GetScript(\"${3:scriptType}\")$0",
		},
		{
			"trigger": "_Translation:GetSmoothing\t()",
			"contents": "${1:smoothType} = ${2:Translation}:GetSmoothing()$0",
		},
		{
			"trigger": "_Translation:GetSmoothProgress\t()",
			"contents": "${1:progress} = ${2:Translation}:GetSmoothProgress()$0",
		},
		{
			"trigger": "_Translation:GetStartDelay\t()",
			"contents": "${1:delay} = ${2:Translation}:GetStartDelay()$0",
		},
		{
			"trigger": "_Translation:GetTarget\t()",
			"contents": "${1:target} = ${2:Translation}:GetTarget()$0",
		},
		{
			"trigger": "_Translation:HasScript\t(\"scriptType\")",
			"contents": "${1:hasScript} = ${2:Translation}:HasScript(\"${3:scriptType}\")$0",
		},
		{
			"trigger": "_Translation:IsDelaying\t()",
			"contents": "${1:delaying} = ${2:Translation}:IsDelaying()$0",
		},
		{
			"trigger": "_Translation:IsDone\t()",
			"contents": "${1:done} = ${2:Translation}:IsDone()$0",
		},
		{
			"trigger": "_Translation:IsForbidden\t()",
			"contents": "${1:isForbidden} = ${2:Translation}:IsForbidden()$0",
		},
		{
			"trigger": "_Translation:IsObjectType\t(\"type\")",
			"contents": "${1:isType} = ${2:Translation}:IsObjectType(\"${3:type}\")$0",
		},
		{
			"trigger": "_Translation:IsPaused\t()",
			"contents": "${1:paused} = ${2:Translation}:IsPaused()$0",
		},
		{
			"trigger": "_Translation:IsPlaying\t()",
			"contents": "${1:playing} = ${2:Translation}:IsPlaying()$0",
		},
		{
			"trigger": "_Translation:IsStopped\t()",
			"contents": "${1:stopped} = ${2:Translation}:IsStopped()$0",
		},




		{
			"trigger": "_Translation\thelp",
			"contents": "Translation = {\n\tinherits = {\n\t\t\"Translation\",\n\t\t\"Animation\",\n\t\t\"ScriptObject\",\n\t\t\"ParentedObject\",\n\t\t\"UIObject\",\n\t},\n\thandlers = {\n\t\t[\"OnFinished\"] = \"self, requested\", -- Run when the animation finishes animating\n\t\t[\"OnLoad\"] = \"self\", -- Run when the frame is created\n\t\t[\"OnPause\"] = \"self\", -- Run when the animation begins to play\n\t\t[\"OnPlay\"] = \"self\", -- Run when the animation begins to play\n\t\t[\"OnStop\"] = \"self, requested\", -- Run when the animation is stopped\n\t\t[\"OnUpdate\"] = \"self, elapsed\", -- Run each time the screen is drawn by the game engine\n\t},\n\tmethods = {\n\t\t\"GetDebugName\", -- Returns the widget object's debug name\n\t\t\"GetDuration\", -- Returns the time for the animation to progress from start to finish\n\t\t\"GetElapsed\", -- Returns the amount of time since the animation began playing\n\t\t\"GetEndDelay\", -- Returns the amount of time the animation delays after finishing\n\t\t\"GetName\", -- Returns the widget object's name\n\t\t\"GetObjectType\", -- Returns the object's widget type\n\t\t\"GetOffset\", -- Returns the animation's translation offsets\n\t\t\"GetOrder\", -- Returns the order of the animation within it's parent group\n\t\t\"GetParent\", -- Returns the object's parent object\n\t\t\"GetProgress\", -- Returns the progress of an animation, ignoring smoothing effects\n\t\t\"GetRegionParent\", -- Returns the region object on which the animation operates\n\t\t\"GetScript\", -- Returns the widget's handler function for a script\n\t\t\"GetSmoothing\", -- Returns the smoothing type for the animation\n\t\t\"GetSmoothProgress\", -- Returns the progress of the animation (ignoring start and end delay)\n\t\t\"GetStartDelay\", -- Returns the amount of time the animation delays before it's progress begins\n\t\t\"GetTarget\", -- Returns the region affected by this animation\n\t\t\"HasScript\", -- Returns whether the widget supports a script handler\n\t\t\"HookScript\", -- Securely hooks a script handler\n\t\t\"IsDelaying\", -- Returns whether the animation is currently in the middle of a start or end delay\n\t\t\"IsDone\", -- Returns whether the animation has finished playing\n\t\t\"IsForbidden\", -- Returns if this widget's methods may only be called from secure execution paths\n\t\t\"IsObjectType\", -- Returns whether the object belongs to a given widget type\n\t\t\"IsPaused\", -- Returns whether the animation is currently paused\n\t\t\"IsPlaying\", -- Returns whether the animation is currently playing\n\t\t\"IsStopped\", -- Returns whether the animation is currently stopped\n\t\t\"Pause\", -- Pauses the animation\n\t\t\"Play\", -- Plays the animation\n\t\t\"Restart\", -- Restarts the animation\n\t\t\"SetChildKey\", -- Sets the animation to manipulate a particular child member of it's host frame\n\t\t\"SetDuration\", -- Sets the time for the animation to progress from start to finish\n\t\t\"SetEndDelay\", -- Sets the amount of time for the animation to delay after finishing\n\t\t\"SetForbidden\", -- Sets whether the modification of the object's secure methods are forbidden while in combat\n\t\t\"SetOffset\", -- Sets the animation's translation offsets\n\t\t\"SetOrder\", -- Sets the order for the animation to play within it's parent group\n\t\t\"SetParent\", -- Sets another frame the parent of this region\n\t\t\"SetScript\", -- Sets the widget's handler function for a script\n\t\t\"SetSmoothing\", -- Sets the smoothing type for the animation\n\t\t\"SetSmoothProgress\", -- Sets the progress of the smoothing type for the animation\n\t\t\"SetStartDelay\", -- Sets the amount of time for the animation to delay before it's progress begins\n\t\t\"SetTarget\", -- Sets the region affected by this animation\n\t\t\"SetTargetKey\", -- Sets the animation to manipulate a particular child member of it's target\n\t\t\"Stop\", -- Stops the animation\n\t},\n}",
		},
	]
}
