{
	"scope": "source.lua - entity - punctuation - keyword - string",
	"completions": [
		{
			"trigger": "LayeredRegion:CanChangeProtectedState\t()",
			"contents": "${1:LayeredRegion}:CanChangeProtectedState()$0",
		},
		{
			"trigger": "LayeredRegion:ClearAllPoints\t()",
			"contents": "${1:LayeredRegion}:ClearAllPoints()$0",
		},
		{
			"trigger": "LayeredRegion:CreateAnimationGroup\t([\"name\"], [\"inheritsFrom\"])",
			"contents": "${1:LayeredRegion}:CreateAnimationGroup(${2:[\"name\"]}, ${3:[\"inheritsFrom\"]})$0",
		},
		{
			"trigger": "LayeredRegion:GetAlpha\t()",
			"contents": "${1:LayeredRegion}:GetAlpha()$0",
		},
		{
			"trigger": "LayeredRegion:GetAnimationGroups\t()",
			"contents": "${1:LayeredRegion}:GetAnimationGroups()$0",
		},
		{
			"trigger": "LayeredRegion:GetBottom\t()",
			"contents": "${1:LayeredRegion}:GetBottom()$0",
		},
		{
			"trigger": "LayeredRegion:GetCenter\t()",
			"contents": "${1:LayeredRegion}:GetCenter()$0",
		},
		{
			"trigger": "LayeredRegion:GetDebugName\t()",
			"contents": "${1:LayeredRegion}:GetDebugName()$0",
		},
		{
			"trigger": "LayeredRegion:GetDrawLayer\t()",
			"contents": "${1:LayeredRegion}:GetDrawLayer()$0",
		},
		{
			"trigger": "LayeredRegion:GetHeight\t()",
			"contents": "${1:LayeredRegion}:GetHeight()$0",
		},
		{
			"trigger": "LayeredRegion:GetLeft\t()",
			"contents": "${1:LayeredRegion}:GetLeft()$0",
		},
		{
			"trigger": "LayeredRegion:GetName\t()",
			"contents": "${1:LayeredRegion}:GetName()$0",
		},
		{
			"trigger": "LayeredRegion:GetNumPoints\t()",
			"contents": "${1:LayeredRegion}:GetNumPoints()$0",
		},
		{
			"trigger": "LayeredRegion:GetObjectType\t()",
			"contents": "${1:LayeredRegion}:GetObjectType()$0",
		},
		{
			"trigger": "LayeredRegion:GetParent\t()",
			"contents": "${1:LayeredRegion}:GetParent()$0",
		},
		{
			"trigger": "LayeredRegion:GetPoint\t(index)",
			"contents": "${1:LayeredRegion}:GetPoint(${2:index})$0",
		},
		{
			"trigger": "LayeredRegion:GetRect\t()",
			"contents": "${1:LayeredRegion}:GetRect()$0",
		},
		{
			"trigger": "LayeredRegion:GetRight\t()",
			"contents": "${1:LayeredRegion}:GetRight()$0",
		},
		{
			"trigger": "LayeredRegion:GetSize\t()",
			"contents": "${1:LayeredRegion}:GetSize()$0",
		},
		{
			"trigger": "LayeredRegion:GetTop\t()",
			"contents": "${1:LayeredRegion}:GetTop()$0",
		},
		{
			"trigger": "LayeredRegion:GetWidth\t()",
			"contents": "${1:LayeredRegion}:GetWidth()$0",
		},
		{
			"trigger": "LayeredRegion:Hide\t()",
			"contents": "${1:LayeredRegion}:Hide()$0",
		},
		{
			"trigger": "LayeredRegion:IsDragging\t()",
			"contents": "${1:LayeredRegion}:IsDragging()$0",
		},
		{
			"trigger": "LayeredRegion:IsForbidden\t()",
			"contents": "${1:LayeredRegion}:IsForbidden()$0",
		},
		{
			"trigger": "LayeredRegion:IsMouseOver\t([topOffset], [leftOffset], [bottomOffset], [rightOffset])",
			"contents": "${1:LayeredRegion}:IsMouseOver(${2:[topOffset]}, ${3:[leftOffset]}, ${4:[bottomOffset]}, ${5:[rightOffset]})$0",
		},
		{
			"trigger": "LayeredRegion:IsObjectLoaded\t()",
			"contents": "${1:LayeredRegion}:IsObjectLoaded()$0",
		},
		{
			"trigger": "LayeredRegion:IsObjectType\t()",
			"contents": "${1:LayeredRegion}:IsObjectType()$0",
		},
		{
			"trigger": "LayeredRegion:IsProtected\t()",
			"contents": "${1:LayeredRegion}:IsProtected()$0",
		},
		{
			"trigger": "LayeredRegion:IsShown\t()",
			"contents": "${1:LayeredRegion}:IsShown()$0",
		},
		{
			"trigger": "LayeredRegion:IsVisible\t()",
			"contents": "${1:LayeredRegion}:IsVisible()$0",
		},
		{
			"trigger": "LayeredRegion:SetAllPoints\t([frame])",
			"contents": "${1:LayeredRegion}:SetAllPoints(${2:[frame]})$0",
		},
		{
			"trigger": "LayeredRegion:SetAlpha\t(alpha)",
			"contents": "${1:LayeredRegion}:SetAlpha(${2:alpha})$0",
		},
		{
			"trigger": "LayeredRegion:SetDrawLayer\t(\"layer\", sublayer)",
			"contents": "${1:LayeredRegion}:SetDrawLayer(\"${2:layer}\", ${3:sublayer})$0",
		},
		{
			"trigger": "LayeredRegion:SetHeight\t(height)",
			"contents": "${1:LayeredRegion}:SetHeight(${2:height})$0",
		},
		{
			"trigger": "LayeredRegion:SetParent\t(frame)",
			"contents": "${1:LayeredRegion}:SetParent(${2:frame})$0",
		},
		{
			"trigger": "LayeredRegion:SetPoint\t(\"point\", [relativeTo], [\"relativePoint\"], [xOffset], [yOffset])",
			"contents": "${1:LayeredRegion}:SetPoint(\"${2:point}\", ${3:[relativeTo]}, \"${4:[relativePoint]}\", ${5:[xOffset]}, ${6:[yOffset]})$0",
		},
		{
			"trigger": "LayeredRegion:SetSize\t(width, height)",
			"contents": "${1:LayeredRegion}:SetSize(${2:width}, ${3:height})$0",
		},
		{
			"trigger": "LayeredRegion:SetVertexColor\t(red, green, blue, [alpha])",
			"contents": "${1:LayeredRegion}:SetVertexColor(${2:red}, ${3:green}, ${4:blue}, ${5:[alpha]})$0",
		},
		{
			"trigger": "LayeredRegion:SetWidth\t(width)",
			"contents": "${1:LayeredRegion}:SetWidth(${2:width})$0",
		},
		{
			"trigger": "LayeredRegion:Show\t()",
			"contents": "${1:LayeredRegion}:Show()$0",
		},
		{
			"trigger": "LayeredRegion:StopAnimating\t()",
			"contents": "${1:LayeredRegion}:StopAnimating()$0",
		},




		{
			"trigger": "_LayeredRegion:CanChangeProtectedState\t()",
			"contents": "${1:canChange} = ${2:LayeredRegion}:CanChangeProtectedState()$0",
		},
		{
			"trigger": "_LayeredRegion:GetAlpha\t()",
			"contents": "${1:alpha} = ${2:LayeredRegion}:GetAlpha()$0",
		},
		{
			"trigger": "_LayeredRegion:GetAnimationGroups\t()",
			"contents": "${1:...} = ${2:LayeredRegion}:GetAnimationGroups()$0",
		},
		{
			"trigger": "_LayeredRegion:GetBottom\t()",
			"contents": "${1:bottom} = ${2:LayeredRegion}:GetBottom()$0",
		},
		{
			"trigger": "_LayeredRegion:GetCenter\t()",
			"contents": "${1:x}, ${2:y} = ${3:LayeredRegion}:GetCenter()$0",
		},
		{
			"trigger": "_LayeredRegion:GetDebugName\t()",
			"contents": "${1:name} = ${2:LayeredRegion}:GetDebugName()$0",
		},
		{
			"trigger": "_LayeredRegion:GetDrawLayer\t()",
			"contents": "${1:layer}, ${2:sublayer} = ${3:LayeredRegion}:GetDrawLayer()$0",
		},
		{
			"trigger": "_LayeredRegion:GetHeight\t()",
			"contents": "${1:height} = ${2:LayeredRegion}:GetHeight()$0",
		},
		{
			"trigger": "_LayeredRegion:GetLeft\t()",
			"contents": "${1:left} = ${2:LayeredRegion}:GetLeft()$0",
		},
		{
			"trigger": "_LayeredRegion:GetName\t()",
			"contents": "${1:name} = ${2:LayeredRegion}:GetName()$0",
		},
		{
			"trigger": "_LayeredRegion:GetNumPoints\t()",
			"contents": "${1:numPoints} = ${2:LayeredRegion}:GetNumPoints()$0",
		},
		{
			"trigger": "_LayeredRegion:GetObjectType\t()",
			"contents": "${1:type} = ${2:LayeredRegion}:GetObjectType()$0",
		},
		{
			"trigger": "_LayeredRegion:GetPoint\t(index)",
			"contents": "${1:point}, ${2:relativeTo}, ${3:relativePoint}, ${4:xOffset}, ${5:yOffset} = ${6:LayeredRegion}:GetPoint(${7:index})$0",
		},
		{
			"trigger": "_LayeredRegion:GetRect\t()",
			"contents": "${1:left}, ${2:bottom}, ${3:width}, ${4:height} = ${5:LayeredRegion}:GetRect()$0",
		},
		{
			"trigger": "_LayeredRegion:GetRight\t()",
			"contents": "${1:right} = ${2:LayeredRegion}:GetRight()$0",
		},
		{
			"trigger": "_LayeredRegion:GetSize\t()",
			"contents": "${1:width}, ${2:height} = ${3:LayeredRegion}:GetSize()$0",
		},
		{
			"trigger": "_LayeredRegion:GetTop\t()",
			"contents": "${1:top} = ${2:LayeredRegion}:GetTop()$0",
		},
		{
			"trigger": "_LayeredRegion:GetWidth\t()",
			"contents": "${1:width} = ${2:LayeredRegion}:GetWidth()$0",
		},
		{
			"trigger": "_LayeredRegion:IsDragging\t()",
			"contents": "${1:isDragging} = ${2:LayeredRegion}:IsDragging()$0",
		},
		{
			"trigger": "_LayeredRegion:IsForbidden\t()",
			"contents": "${1:isForbidden} = ${2:LayeredRegion}:IsForbidden()$0",
		},
		{
			"trigger": "_LayeredRegion:IsMouseOver\t([topOffset], [leftOffset], [bottomOffset], [rightOffset])",
			"contents": "${1:isOver} = ${2:LayeredRegion}:IsMouseOver(${3:[topOffset]}, ${4:[leftOffset]}, ${5:[bottomOffset]}, ${6:[rightOffset]})$0",
		},
		{
			"trigger": "_LayeredRegion:IsObjectLoaded\t()",
			"contents": "${1:isLoaded} = ${2:LayeredRegion}:IsObjectLoaded()$0",
		},
		{
			"trigger": "_LayeredRegion:IsObjectType\t(\"type\")",
			"contents": "${1:isType} = ${2:LayeredRegion}:IsObjectType(\"${3:type}\")$0",
		},
		{
			"trigger": "_LayeredRegion:IsProtected\t()",
			"contents": "${1:isProtected}, ${2:explicit} = ${3:LayeredRegion}:IsProtected()$0",
		},
		{
			"trigger": "_LayeredRegion:IsShown\t()",
			"contents": "${1:shown} = ${2:LayeredRegion}:IsShown()$0",
		},
		{
			"trigger": "_LayeredRegion:IsVisible\t()",
			"contents": "${1:visible} = ${2:LayeredRegion}:IsVisible()$0",
		},




		{
			"trigger": "_LayeredRegion\thelp",
			"contents": "LayeredRegion = {\n\tinherits = {\n\t\t\"LayeredRegion\",\n\t\t\"VisibleRegion\",\n\t\t\"Region\",\n\t\t\"ParentedObject\",\n\t\t\"UIObject\",\n\t},\n\tmethods = {\n\t\t\"CanChangeProtectedState\", -- Returns whether protected properties of the region can be changed by non-secure scripts\n\t\t\"ClearAllPoints\", -- Removes all anchor points from the region\n\t\t\"CreateAnimationGroup\", -- Creates a new animation group as a child of the region\n\t\t\"GetAlpha\", -- Returns the opacity of the region relative to it's parent\n\t\t\"GetAnimationGroups\", -- Returns a list of animation groups belonging to the region\n\t\t\"GetBottom\", -- Returns the distance from the bottom of the screen to the bottom of the region\n\t\t\"GetCenter\", -- Returns the screen coordinates of the region's center\n\t\t\"GetDebugName\", -- Returns the widget object's debug name\n\t\t\"GetDrawLayer\", -- Returns the layer at which the region's graphics are drawn relative to others in it's frame\n\t\t\"GetHeight\", -- Returns the height of the region\n\t\t\"GetLeft\", -- Returns the distance from the left edge of the screen to the left edge of the region\n\t\t\"GetName\", -- Returns the widget object's name\n\t\t\"GetNumPoints\", -- Returns the number of anchor points defined for the region\n\t\t\"GetObjectType\", -- Returns the object's widget type\n\t\t\"GetParent\", -- Returns the object's parent object\n\t\t\"GetPoint\", -- Returns information about one of the region's anchor points\n\t\t\"GetRect\", -- Returns the position and dimensions of the region\n\t\t\"GetRight\", -- Returns the distance from the left edge of the screen to the right edge of the region\n\t\t\"GetSize\", -- Returns the width and height of the region\n\t\t\"GetTop\", -- Returns the distance from the bottom of the screen to the top of the region\n\t\t\"GetWidth\", -- Returns the width of the region\n\t\t\"Hide\", -- Hides the region\n\t\t\"IsDragging\", -- Returns whether the region is currently being dragged\n\t\t\"IsForbidden\", -- Returns if this widget's methods may only be called from secure execution paths\n\t\t\"IsMouseOver\", -- Returns whether the mouse cursor is over the given region\n\t\t\"IsObjectLoaded\", -- Returns whether the object belongs to a given widget type\n\t\t\"IsObjectType\", -- Returns whether the object is loaded\n\t\t\"IsProtected\", -- Returns whether the region is protected\n\t\t\"IsShown\", -- Returns whether the region is shown\n\t\t\"IsVisible\", -- Returns whether the region is visible\n\t\t\"SetAllPoints\", -- Sets all anchor points of the region to match those of another region\n\t\t\"SetAlpha\", -- Sets the opacity of the region relative to it's parent\n\t\t\"SetDrawLayer\", -- Sets the layer at which the region's graphics are drawn relative to others in it's frame\n\t\t\"SetHeight\", -- Sets the region's height\n\t\t\"SetParent\", -- Sets another frame the parent of this region\n\t\t\"SetPoint\", -- Sets an anchor point for the region\n\t\t\"SetSize\", -- Sets the size of the region to the specified values\n\t\t\"SetVertexColor\", -- Sets a color shading for the region's graphics\n\t\t\"SetWidth\", -- Sets the region's width\n\t\t\"Show\", -- Shows the region\n\t\t\"StopAnimating\", -- Stops any active animations involving the region or it's children\n\t},\n}",
		},
	]
}
