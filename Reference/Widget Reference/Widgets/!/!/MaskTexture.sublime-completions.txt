{
	"scope": "source.lua - entity - punctuation - keyword - string - meta.function.arguments.lua - meta.punctuation.lua - meta.method-call.lua",
	"completions": [
		{
			"trigger": "MaskTexture:CanChangeProtectedState\t()",
			"contents": "${1:MaskTexture}:CanChangeProtectedState()$0",
		},
		{
			"trigger": "MaskTexture:ClearAllPoints\t()",
			"contents": "${1:MaskTexture}:ClearAllPoints()$0",
		},
		{
			"trigger": "MaskTexture:CreateAnimationGroup\t([\"name\"], [\"inheritsFrom\"])",
			"contents": "${1:MaskTexture}:CreateAnimationGroup(${2:[\"name\"]}, ${3:[\"inheritsFrom\"]})$0",
		},
		{
			"trigger": "MaskTexture:GetAlpha\t()",
			"contents": "${1:MaskTexture}:GetAlpha()$0",
		},
		{
			"trigger": "MaskTexture:GetAnimationGroups\t()",
			"contents": "${1:MaskTexture}:GetAnimationGroups()$0",
		},
		{
			"trigger": "MaskTexture:GetAtlas\t()",
			"contents": "${1:MaskTexture}:GetAtlas()$0",
		},
		{
			"trigger": "MaskTexture:GetBlendMode\t()",
			"contents": "${1:MaskTexture}:GetBlendMode()$0",
		},
		{
			"trigger": "MaskTexture:GetBottom\t()",
			"contents": "${1:MaskTexture}:GetBottom()$0",
		},
		{
			"trigger": "MaskTexture:GetCenter\t()",
			"contents": "${1:MaskTexture}:GetCenter()$0",
		},
		{
			"trigger": "MaskTexture:GetDebugName\t()",
			"contents": "${1:MaskTexture}:GetDebugName()$0",
		},
		{
			"trigger": "MaskTexture:GetDesaturation\t()",
			"contents": "${1:MaskTexture}:GetDesaturation()$0",
		},
		{
			"trigger": "MaskTexture:GetDrawLayer\t()",
			"contents": "${1:MaskTexture}:GetDrawLayer()$0",
		},
		{
			"trigger": "MaskTexture:GetHeight\t()",
			"contents": "${1:MaskTexture}:GetHeight()$0",
		},
		{
			"trigger": "MaskTexture:GetHorizTile\t()",
			"contents": "${1:MaskTexture}:GetHorizTile()$0",
		},
		{
			"trigger": "MaskTexture:GetLeft\t()",
			"contents": "${1:MaskTexture}:GetLeft()$0",
		},
		{
			"trigger": "MaskTexture:GetName\t()",
			"contents": "${1:MaskTexture}:GetName()$0",
		},
		{
			"trigger": "MaskTexture:GetNonBlocking\t()",
			"contents": "${1:MaskTexture}:GetNonBlocking()$0",
		},
		{
			"trigger": "MaskTexture:GetNumPoints\t()",
			"contents": "${1:MaskTexture}:GetNumPoints()$0",
		},
		{
			"trigger": "MaskTexture:GetObjectType\t()",
			"contents": "${1:MaskTexture}:GetObjectType()$0",
		},
		{
			"trigger": "MaskTexture:GetParent\t()",
			"contents": "${1:MaskTexture}:GetParent()$0",
		},
		{
			"trigger": "MaskTexture:GetPoint\t(index)",
			"contents": "${1:MaskTexture}:GetPoint(${2:index})$0",
		},
		{
			"trigger": "MaskTexture:GetRect\t()",
			"contents": "${1:MaskTexture}:GetRect()$0",
		},
		{
			"trigger": "MaskTexture:GetRight\t()",
			"contents": "${1:MaskTexture}:GetRight()$0",
		},
		{
			"trigger": "MaskTexture:GetSize\t()",
			"contents": "${1:MaskTexture}:GetSize()$0",
		},
		{
			"trigger": "MaskTexture:GetTexCoord\t()",
			"contents": "${1:MaskTexture}:GetTexCoord()$0",
		},
		{
			"trigger": "MaskTexture:GetTexture\t()",
			"contents": "${1:MaskTexture}:GetTexture()$0",
		},
		{
			"trigger": "MaskTexture:GetTop\t()",
			"contents": "${1:MaskTexture}:GetTop()$0",
		},
		{
			"trigger": "MaskTexture:GetVertexColor\t()",
			"contents": "${1:MaskTexture}:GetVertexColor()$0",
		},
		{
			"trigger": "MaskTexture:GetVertexOffset\t(vertexIndex)",
			"contents": "${1:MaskTexture}:GetVertexOffset(${2:vertexIndex})$0",
		},
		{
			"trigger": "MaskTexture:GetVertTile\t()",
			"contents": "${1:MaskTexture}:GetVertTile()$0",
		},
		{
			"trigger": "MaskTexture:GetWidth\t()",
			"contents": "${1:MaskTexture}:GetWidth()$0",
		},
		{
			"trigger": "MaskTexture:Hide\t()",
			"contents": "${1:MaskTexture}:Hide()$0",
		},
		{
			"trigger": "MaskTexture:IsDesaturated\t()",
			"contents": "${1:MaskTexture}:IsDesaturated()$0",
		},
		{
			"trigger": "MaskTexture:IsDragging\t()",
			"contents": "${1:MaskTexture}:IsDragging()$0",
		},
		{
			"trigger": "MaskTexture:IsForbidden\t()",
			"contents": "${1:MaskTexture}:IsForbidden()$0",
		},
		{
			"trigger": "MaskTexture:IsIgnoringParentAlpha\t()",
			"contents": "${1:MaskTexture}:IsIgnoringParentAlpha()$0",
		},
		{
			"trigger": "MaskTexture:IsIgnoringParentScale\t()",
			"contents": "${1:MaskTexture}:IsIgnoringParentScale()$0",
		},
		{
			"trigger": "MaskTexture:IsMouseOver\t([topOffset], [leftOffset], [bottomOffset], [rightOffset])",
			"contents": "${1:MaskTexture}:IsMouseOver(${2:[topOffset]}, ${3:[leftOffset]}, ${4:[bottomOffset]}, ${5:[rightOffset]})$0",
		},
		{
			"trigger": "MaskTexture:IsObjectLoaded\t()",
			"contents": "${1:MaskTexture}:IsObjectLoaded()$0",
		},
		{
			"trigger": "MaskTexture:IsObjectType\t()",
			"contents": "${1:MaskTexture}:IsObjectType()$0",
		},
		{
			"trigger": "MaskTexture:IsProtected\t()",
			"contents": "${1:MaskTexture}:IsProtected()$0",
		},
		{
			"trigger": "MaskTexture:IsRectValid\t()",
			"contents": "${1:MaskTexture}:IsRectValid()$0",
		},
		{
			"trigger": "MaskTexture:IsShown\t()",
			"contents": "${1:MaskTexture}:IsShown()$0",
		},
		{
			"trigger": "MaskTexture:IsVisible\t()",
			"contents": "${1:MaskTexture}:IsVisible()$0",
		},
		{
			"trigger": "MaskTexture:SetAllPoints\t([frame])",
			"contents": "${1:MaskTexture}:SetAllPoints(${2:[frame]})$0",
		},
		{
			"trigger": "MaskTexture:SetAlpha\t(alpha)",
			"contents": "${1:MaskTexture}:SetAlpha(${2:alpha})$0",
		},
		{
			"trigger": "MaskTexture:SetAtlas\t(\"texture\", useAtlasSize)",
			"contents": "${1:MaskTexture}:SetAtlas(${2:\"texture\"}, ${3:useAtlasSize})$0",
		},
		{
			"trigger": "MaskTexture:SetBlendMode\t(\"mode\")",
			"contents": "${1:MaskTexture}:SetBlendMode(${2:\"mode\"})$0",
		},
		{
			"trigger": "MaskTexture:SetColorTexture\t(red, green, blue, [alpha])",
			"contents": "${1:MaskTexture}:SetColorTexture(${2:red}, ${3:green}, ${4:blue}, ${5:[alpha]})$0",
		},
		{
			"trigger": "MaskTexture:SetDesaturated\t(enable)",
			"contents": "${1:MaskTexture}:SetDesaturated(${2:enable})$0",
		},
		{
			"trigger": "MaskTexture:SetDesaturation\t(enable)",
			"contents": "${1:MaskTexture}:SetDesaturation(${2:enable})$0",
		},
		{
			"trigger": "MaskTexture:SetDrawLayer\t(\"layer\", sublayer)",
			"contents": "${1:MaskTexture}:SetDrawLayer(\"${2:layer}\", ${3:sublayer})$0",
		},
		{
			"trigger": "MaskTexture:SetForbidden\t()",
			"contents": "${1:MaskTexture}:SetForbidden()$0",
		},
		{
			"trigger": "MaskTexture:SetGradient\t(\"orientation\", startR, startG, startB, endR, endG, endB)",
			"contents": "${1:MaskTexture}:SetGradient(\"${2:orientation}\", ${3:startR}, ${4:startG}, ${5:startB}, ${6:endR}, ${7:endG}, ${8:endB})$0",
		},
		{
			"trigger": "MaskTexture:SetGradientAlpha\t(\"orientation\", startR, startG, startB, startAlpha, endR, endG, endB, endAlpha)",
			"contents": "${1:MaskTexture}:SetGradientAlpha(\"${2:orientation}\", ${3:startR}, ${4:startG}, ${5:startB}, ${6:startAlpha}, ${7:endR}, ${8:endG}, ${9:endB}, ${10:endAlpha})$0",
		},
		{
			"trigger": "MaskTexture:SetHeight\t(height)",
			"contents": "${1:MaskTexture}:SetHeight(${2:height})$0",
		},
		{
			"trigger": "MaskTexture:SetHorizTile\t(enable)",
			"contents": "${1:MaskTexture}:SetHorizTile(${2:enable})$0",
		},
		{
			"trigger": "MaskTexture:SetIgnoreParentAlpha\t(enable)",
			"contents": "${1:MaskTexture}:SetIgnoreParentAlpha(${2:enable})$0",
		},
		{
			"trigger": "MaskTexture:SetIgnoreParentScale\t(enable)",
			"contents": "${1:MaskTexture}:SetIgnoreParentScale(${2:enable})$0",
		},
		{
			"trigger": "MaskTexture:SetMask\t(\"texture\")",
			"contents": "${1:MaskTexture}:SetMask(${2:\"texture\"})$0",
		},
		{
			"trigger": "MaskTexture:SetNonBlocking\t(nonBlocking)",
			"contents": "${1:MaskTexture}:SetNonBlocking(${2:nonBlocking})$0",
		},
		{
			"trigger": "MaskTexture:SetParent\t(frame)",
			"contents": "${1:MaskTexture}:SetParent(${2:frame})$0",
		},
		{
			"trigger": "MaskTexture:SetPoint\t(\"point\", [relativeTo], [\"relativePoint\"], [xOffset], [yOffset])",
			"contents": "${1:MaskTexture}:SetPoint(\"${2:point}\", ${3:[relativeTo]}, \"${4:[relativePoint]}\", ${5:[xOffset]}, ${6:[yOffset]})$0",
		},
		{
			"trigger": "MaskTexture:SetRotation\t(radians)",
			"contents": "${1:MaskTexture}:SetRotation(${2:radians})$0",
		},
		{
			"trigger": "MaskTexture:SetShown\t(enable)",
			"contents": "${1:MaskTexture}:SetShown(${2:enable})$0",
		},
		{
			"trigger": "MaskTexture:SetSize\t(width, height)",
			"contents": "${1:MaskTexture}:SetSize(${2:width}, ${3:height})$0",
		},
		{
			"trigger": "MaskTexture:SetTexCoord\t(left, right, top, bottom)",
			"contents": "${1:MaskTexture}:SetTexCoord(${2:left}, ${3:right}, ${4:top}, ${5:bottom})$0",
		},
		{
			"trigger": "MaskTexture:SetTexCoord\t(ULx, ULy, LLx, LLy, URx, URy, LRx, LRy)",
			"contents": "${1:MaskTexture}:SetTexCoord(${2:ULx}, ${3:ULy}, ${4:LLx}, ${5:LLy}, ${6:URx}, ${7:URy}, ${8:LRx}, ${9:LRy})$0",
		},
		{
			"trigger": "MaskTexture:SetTexture\t(\"texture\", [\"horizWrap\"], [\"vertWrap\"], [\"filterMode\"])",
			"contents": "${1:MaskTexture}:SetTexture(\"${2:texture}\"${3:, \"${4:[horizWrap]}\", \"${5:[vertWrap]}\", \"${6:[filterMode]}\"}})$0",
		},
		{
			"trigger": "MaskTexture:SetVertexColor\t(red, green, blue, [alpha])",
			"contents": "${1:MaskTexture}:SetVertexColor(${2:red}, ${3:green}, ${4:blue}, ${5:[alpha]})$0",
		},
		{
			"trigger": "MaskTexture:SetVertexOffset\t(vertexIndex, x, y)",
			"contents": "${1:MaskTexture}:SetVertexOffset(${2:vertexIndex}, ${3:x}, ${4:y})$0",
		},
		{
			"trigger": "MaskTexture:SetVertTile\t(enable)",
			"contents": "${1:MaskTexture}:SetVertTile(${2:enable})$0",
		},
		{
			"trigger": "MaskTexture:SetWidth\t(width)",
			"contents": "${1:MaskTexture}:SetWidth(${2:width})$0",
		},
		{
			"trigger": "MaskTexture:Show\t()",
			"contents": "${1:MaskTexture}:Show()$0",
		},
		{
			"trigger": "MaskTexture:StopAnimating\t()",
			"contents": "${1:MaskTexture}:StopAnimating()$0",
		},




		{
			"trigger": "_MaskTexture:CanChangeProtectedState\t()",
			"contents": "${1:canChange} = ${2:MaskTexture}:CanChangeProtectedState()$0",
		},
		{
			"trigger": "_MaskTexture:GetAlpha\t()",
			"contents": "${1:alpha} = ${2:MaskTexture}:GetAlpha()$0",
		},
		{
			"trigger": "_MaskTexture:GetAnimationGroups\t()",
			"contents": "${1:...} = ${2:MaskTexture}:GetAnimationGroups()$0",
		},
		{
			"trigger": "_MaskTexture:GetAtlas\t()",
			"contents": "${1:atlasFile} = ${2:MaskTexture}:GetAtlas()$0",
		},
		{
			"trigger": "_MaskTexture:GetBlendMode\t()",
			"contents": "${1:mode} = ${2:MaskTexture}:GetBlendMode()$0",
		},
		{
			"trigger": "_MaskTexture:GetBottom\t()",
			"contents": "${1:bottom} = ${2:MaskTexture}:GetBottom()$0",
		},
		{
			"trigger": "_MaskTexture:GetCenter\t()",
			"contents": "${1:x}, ${2:y} = ${3:MaskTexture}:GetCenter()$0",
		},
		{
			"trigger": "_MaskTexture:GetDebugName\t()",
			"contents": "${1:name} = ${2:MaskTexture}:GetDebugName()$0",
		},
		{
			"trigger": "_MaskTexture:GetDesaturation\t()",
			"contents": "${1:desaturated} = ${2:MaskTexture}:GetDesaturation()$0",
		},
		{
			"trigger": "_MaskTexture:GetDrawLayer\t()",
			"contents": "${1:layer}, ${2:sublayer} = ${3:MaskTexture}:GetDrawLayer()$0",
		},
		{
			"trigger": "_MaskTexture:GetHeight\t()",
			"contents": "${1:height} = ${2:MaskTexture}:GetHeight()$0",
		},
		{
			"trigger": "_MaskTexture:GetHorizTile\t()",
			"contents": "${1:enabled} = ${2:MaskTexture}:GetHorizTile()$0",
		},
		{
			"trigger": "_MaskTexture:GetLeft\t()",
			"contents": "${1:left} = ${2:MaskTexture}:GetLeft()$0",
		},
		{
			"trigger": "_MaskTexture:GetName\t()",
			"contents": "${1:name} = ${2:MaskTexture}:GetName()$0",
		},
		{
			"trigger": "_MaskTexture:GetNonBlocking\t()",
			"contents": "${1:nonBlocking} = ${2:MaskTexture}:GetNonBlocking()$0",
		},
		{
			"trigger": "_MaskTexture:GetNumPoints\t()",
			"contents": "${1:numPoints} = ${2:MaskTexture}:GetNumPoints()$0",
		},
		{
			"trigger": "_MaskTexture:GetObjectType\t()",
			"contents": "${1:type} = ${2:MaskTexture}:GetObjectType()$0",
		},
		{
			"trigger": "_MaskTexture:GetPoint\t(index)",
			"contents": "${1:point}, ${2:relativeTo}, ${3:relativePoint}, ${4:xOffset}, ${5:yOffset} = ${6:MaskTexture}:GetPoint(${7:index})$0",
		},
		{
			"trigger": "_MaskTexture:GetRect\t()",
			"contents": "${1:left}, ${2:bottom}, ${3:width}, ${4:height} = ${5:MaskTexture}:GetRect()$0",
		},
		{
			"trigger": "_MaskTexture:GetRight\t()",
			"contents": "${1:right} = ${2:MaskTexture}:GetRight()$0",
		},
		{
			"trigger": "_MaskTexture:GetSize\t()",
			"contents": "${1:width}, ${2:height} = ${3:MaskTexture}:GetSize()$0",
		},
		{
			"trigger": "_MaskTexture:GetTexCoord\t()",
			"contents": "${1:ULx}, ${2:ULy}, ${3:LLx}, ${4:LLy}, ${5:URx}, ${6:URy}, ${7:LRx}, ${8:LRy} = ${9:MaskTexture}:GetTexCoord()$0",
		},
		{
			"trigger": "_MaskTexture:GetTexture\t()",
			"contents": "${1:MaskTexture} = ${2:MaskTexture}:GetTexture()$0",
		},
		{
			"trigger": "_MaskTexture:GetTop\t()",
			"contents": "${1:top} = ${2:MaskTexture}:GetTop()$0",
		},
		{
			"trigger": "_MaskTexture:GetVertexColor\t()",
			"contents": "${1:red}, ${2:green}, ${3:blue}, ${4:alpha} = ${5:MaskTexture}:GetVertexColor()$0",
		},
		{
			"trigger": "_MaskTexture:GetVertexOffset\t(vertexIndex)",
			"contents": "${1:x}, ${2:y} = ${3:MaskTexture}:GetVertexOffset(${4:vertexIndex})$0",
		},
		{
			"trigger": "_MaskTexture:GetVertTile\t()",
			"contents": "${1:enabled} = ${2:MaskTexture}:GetVertTile()$0",
		},
		{
			"trigger": "_MaskTexture:GetWidth\t()",
			"contents": "${1:width} = ${2:MaskTexture}:GetWidth()$0",
		},
		{
			"trigger": "_MaskTexture:IsDesaturated\t()",
			"contents": "${1:desaturated} = ${2:MaskTexture}:IsDesaturated()$0",
		},
		{
			"trigger": "_MaskTexture:IsDragging\t()",
			"contents": "${1:isDragging} = ${2:MaskTexture}:IsDragging()$0",
		},
		{
			"trigger": "_MaskTexture:IsForbidden\t()",
			"contents": "${1:isForbidden} = ${2:MaskTexture}:IsForbidden()$0",
		},
		{
			"trigger": "_MaskTexture:IsIgnoringParentAlpha\t()",
			"contents": "${1:isIgnoring} = ${2:MaskTexture}:IsIgnoringParentAlpha()$0",
		},
		{
			"trigger": "_MaskTexture:IsIgnoringParentScale\t()",
			"contents": "${1:isIgnoring} = ${2:MaskTexture}:IsIgnoringParentScale()$0",
		},
		{
			"trigger": "_MaskTexture:IsMouseOver\t([topOffset], [leftOffset], [bottomOffset], [rightOffset])",
			"contents": "${1:isOver} = ${2:MaskTexture}:IsMouseOver(${3:[topOffset]}, ${4:[leftOffset]}, ${5:[bottomOffset]}, ${6:[rightOffset]})$0",
		},
		{
			"trigger": "_MaskTexture:IsObjectLoaded\t()",
			"contents": "${1:loaded} = ${2:MaskTexture}:IsObjectLoaded()$0",
		},
		{
			"trigger": "_MaskTexture:IsObjectType\t(\"type\")",
			"contents": "${1:isType} = ${2:MaskTexture}:IsObjectType(\"${3:type}\")$0",
		},
		{
			"trigger": "_MaskTexture:IsProtected\t()",
			"contents": "${1:isProtected}, ${2:explicit} = ${3:MaskTexture}:IsProtected()$0",
		},
		{
			"trigger": "_MaskTexture:IsRectValid\t()",
			"contents": "${1:isValid} = ${2:MaskTexture}:IsRectValid()$0",
		},
		{
			"trigger": "_MaskTexture:IsShown\t()",
			"contents": "${1:shown} = ${2:MaskTexture}:IsShown()$0",
		},
		{
			"trigger": "_MaskTexture:IsVisible\t()",
			"contents": "${1:visible} = ${2:MaskTexture}:IsVisible()$0",
		},




		{
			"trigger": "_MaskTexture\thelp",
			"contents": "MaskTexture = {\n\tinherits = {\n\t\t\"MaskTexture\",\n\t\t\"Texture\",\n\t\t\"LayeredRegion\",\n\t\t\"VisibleRegion\",\n\t\t\"Region\",\n\t\t\"ParentedObject\",\n\t\t\"UIObject\",\n\t},\n\tmethods = {\n\t\t\"CanChangeProtectedState\", -- Returns whether protected properties of the region can be changed by non-secure scripts\n\t\t\"ClearAllPoints\", -- Removes all anchor points from the region\n\t\t\"CreateAnimationGroup\", -- Creates a new animation group as a child of the region\n\t\t\"GetAlpha\", -- Returns the opacity of the region relative to it's parent\n\t\t\"GetAnimationGroups\", -- Returns a list of animation groups belonging to the region\n\t\t\"GetAtlas\", -- Returns the currently set atlas table's name\n\t\t\"GetBlendMode\", -- Returns the blend mode of the texture\n\t\t\"GetBottom\", -- Returns the distance from the bottom of the screen to the bottom of the region\n\t\t\"GetCenter\", -- Returns the screen coordinates of the region's center\n\t\t\"GetDebugName\", -- Returns the widget object's debug name\n\t\t\"GetDesaturation\", -- Returns whether the texture image should be displayed with zero saturation\n\t\t\"GetDrawLayer\", -- Returns the layer at which the region's graphics are drawn relative to others in it's frame\n\t\t\"GetHeight\", -- Returns the height of the region\n\t\t\"GetHorizTile\", -- Returns the horizonal tiling behaviour of the texture\n\t\t\"GetLeft\", -- Returns the distance from the left edge of the screen to the left edge of the region\n\t\t\"GetName\", -- Returns the widget object's name\n\t\t\"GetNonBlocking\", -- Returns whether the texture object loads it's image file in the background\n\t\t\"GetNumPoints\", -- Returns the number of anchor points defined for the region\n\t\t\"GetObjectType\", -- Returns the object's widget type\n\t\t\"GetParent\", -- Returns the object's parent object\n\t\t\"GetPoint\", -- Returns information about one of the region's anchor points\n\t\t\"GetRect\", -- Returns the position and dimensions of the region\n\t\t\"GetRight\", -- Returns the distance from the left edge of the screen to the right edge of the region\n\t\t\"GetSize\", -- Returns the width and height of the region\n\t\t\"GetTexCoord\", -- Returns corner coordinates for scaling or cropping the texture image\n\t\t\"GetTexture\", -- Returns the path to the texture's image file\n\t\t\"GetTop\", -- Returns the distance from the bottom of the screen to the top of the region\n\t\t\"GetVertexColor\", -- Returns the shading color of the texture\n\t\t\"GetVertexOffset\", -- Returns the offset parameters for the texture's vertex index\n\t\t\"GetVertTile\", -- Returns the vertical tiling behaviour of the texture\n\t\t\"GetWidth\", -- Returns the width of the region\n\t\t\"Hide\", -- Hides the region\n\t\t\"IsDesaturated\", -- Returns whether the texture image should be displayed with zero saturation\n\t\t\"IsDragging\", -- Returns whether the region is currently being dragged\n\t\t\"IsForbidden\", -- Returns if this widget's methods may only be called from secure execution paths\n\t\t\"IsIgnoringParentAlpha\", -- Returns if the region is ignoring it's parent alpha changes\n\t\t\"IsIgnoringParentScale\", -- Returns if the region is ignoring it's parent scale changes\n\t\t\"IsMouseOver\", -- Returns whether the mouse cursor is over the given region\n\t\t\"IsObjectLoaded\", -- Returns whether the object is loaded\n\t\t\"IsObjectType\", -- Returns whether the object belongs to a given widget type\n\t\t\"IsProtected\", -- Returns whether the region is protected\n\t\t\"IsRectValid\", -- Returns whether the region's rect size is valid\n\t\t\"IsShown\", -- Returns whether the region is shown\n\t\t\"IsVisible\", -- Returns whether the region is visible\n\t\t\"SetAllPoints\", -- Sets all anchor points of the region to match those of another region\n\t\t\"SetAlpha\", -- Sets the opacity of the region relative to it's parent\n\t\t\"SetAtlas\", -- Sets corner coordinates for scaling or cropping the texture image based on a predefined atlas table's values\n\t\t\"SetBlendMode\", -- Sets the blend mode of the texture\n\t\t\"SetColorTexture\", -- Sets the color of the texture\n\t\t\"SetDesaturated\", -- Sets whether the texture image should be displayed with zero saturation\n\t\t\"SetDesaturation\", -- Sets whether the texture image should be displayed with zero saturation\n\t\t\"SetDrawLayer\", -- Sets the layer at which the region's graphics are drawn relative to others in it's frame\n\t\t\"SetForbidden\", -- Sets whether the modification of the object's secure methods are forbidden while in combat\n\t\t\"SetGradient\", -- Sets a gradient color shading for the texture\n\t\t\"SetGradientAlpha\", -- Sets a gradient color shading and their opacity values for the texture\n\t\t\"SetHeight\", -- Sets the region's height\n\t\t\"SetHorizTile\", -- Sets horizontal tiling behaviour for the texture\n\t\t\"SetIgnoreParentAlpha\", -- Sets if the region should ignore it's parent alpha changes\n\t\t\"SetIgnoreParentScale\", -- Sets if the region should ignore it's parent scale changes\n\t\t\"SetMask\", -- Applies alpha channel from one texture to another texture\n\t\t\"SetNonBlocking\", -- Sets whether the texture object loads it's image file in the background\n\t\t\"SetParent\", -- Sets another frame the parent of this region\n\t\t\"SetPoint\", -- Sets an anchor point for the region\n\t\t\"SetRotation\", -- Rotates the texture image\n\t\t\"SetShown\", -- Sets whether the region should be visible or hidden\n\t\t\"SetSize\", -- Sets the size of the region to the specified values\n\t\t\"SetTexCoord\", -- Sets corner coordinates for scaling or cropping the texture image\n\t\t\"SetTexture\", -- Sets the texture object's image\n\t\t\"SetVertexColor\", -- Sets a color shading for the region's graphics\n\t\t\"SetVertexOffset\", -- Sets the offset parameters for the texture's vertex index\n\t\t\"SetVertTile\", -- Sets the vertical tiling behaviour for the texture\n\t\t\"SetWidth\", -- Sets the region's width\n\t\t\"Show\", -- Shows the region\n\t\t\"StopAnimating\", -- Stops any active animations involving the region or it's children\n\t},\n}",
		},
	]
}
