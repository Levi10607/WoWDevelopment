{
	"scope": "source.lua - entity - punctuation - keyword - string",
	"completions": [
		{
			"trigger": "Frame:CanChangeAttribute\t()",
			"contents": "${1:Frame}:CanChangeAttribute()$0",
		},
		{
			"trigger": "Frame:CanChangeProtectedState\t()",
			"contents": "${1:Frame}:CanChangeProtectedState()$0",
		},
		{
			"trigger": "Frame:ClearAllPoints\t()",
			"contents": "${1:Frame}:ClearAllPoints()$0",
		},
		{
			"trigger": "Frame:CreateAnimationGroup\t([\"name\"], [\"inheritsFrom\"])",
			"contents": "${1:Frame}:CreateAnimationGroup(${2:[\"name\"]}, ${3:[\"inheritsFrom\"]})$0",
		},
		{
			"trigger": "Frame:CreateFontString\t([\"name\"], [\"layer\"], [\"inherits\"])",
			"contents": "${1:Frame}:CreateFontString(${2:[\"name\"]}, ${3:[\"layer\"]}, ${4:[\"inherits\"]})$0",
		},
		{
			"trigger": "Frame:CreateLine\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:Frame}:CreateLine(${2:[\"name\"]}, ${3:[\"layer\"]}, ${4:[\"inherits\"]}, ${5:[sublevel]})$0",
		},
		{
			"trigger": "Frame:CreateMaskTexture\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:Frame}:CreateMaskTexture(${2:[\"name\"]}, ${3:[\"layer\"]}, ${4:[\"inherits\"]}, ${5:[sublevel]})$0",
		},
		{
			"trigger": "Frame:CreateTexture\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:Frame}:CreateTexture(${2:[\"name\"]}, ${3:[\"layer\"]}, ${4:[\"inherits\"]}, ${5:[sublevel]})$0",
		},
		{
			"trigger": "Frame:DisableDrawLayer\t(\"layer\")",
			"contents": "${1:Frame}:DisableDrawLayer(\"${2:layer}\")$0",
		},
		{
			"trigger": "Frame:DoesClipChildren\t()",
			"contents": "${1:Frame}:DoesClipChildren()$0",
		},
		{
			"trigger": "Frame:EnableDrawLayer\t(\"layer\")",
			"contents": "${1:Frame}:EnableDrawLayer(\"${2:layer}\")$0",
		},
		{
			"trigger": "Frame:EnableJoystick\t(enable)",
			"contents": "${1:Frame}:EnableJoystick(${2:enable})$0",
		},
		{
			"trigger": "Frame:EnableKeyboard\t(enable)",
			"contents": "${1:Frame}:EnableKeyboard(${2:enable})$0",
		},
		{
			"trigger": "Frame:EnableMouse\t(enable)",
			"contents": "${1:Frame}:EnableMouse(${2:enable})$0",
		},
		{
			"trigger": "Frame:EnableMouseWheel\t(enable)",
			"contents": "${1:Frame}:EnableMouseWheel(${2:enable})$0",
		},
		{
			"trigger": "Frame:GetAlpha\t()",
			"contents": "${1:Frame}:GetAlpha()$0",
		},
		{
			"trigger": "Frame:GetAnimationGroups\t()",
			"contents": "${1:Frame}:GetAnimationGroups()$0",
		},
		{
			"trigger": "Frame:GetAttribute\t(\"name\")",
			"contents": "${1:Frame}:GetAttribute(${2:\"name\"})$0",
		},
		{
			"trigger": "Frame:GetBackdrop\t()",
			"contents": "${1:Frame}:GetBackdrop()$0",
		},
		{
			"trigger": "Frame:GetBackdropBorderColor\t()",
			"contents": "${1:Frame}:GetBackdropBorderColor()$0",
		},
		{
			"trigger": "Frame:GetBackdropColor\t()",
			"contents": "${1:Frame}:GetBackdropColor()$0",
		},
		{
			"trigger": "Frame:GetBottom\t()",
			"contents": "${1:Frame}:GetBottom()$0",
		},
		{
			"trigger": "Frame:GetBoundsRect\t()",
			"contents": "${1:Frame}:GetBoundsRect()$0",
		},
		{
			"trigger": "Frame:GetCenter\t()",
			"contents": "${1:Frame}:GetCenter()$0",
		},
		{
			"trigger": "Frame:GetChildren\t()",
			"contents": "${1:Frame}:GetChildren()$0",
		},
		{
			"trigger": "Frame:GetClampRectInsets\t()",
			"contents": "${1:Frame}:GetClampRectInsets()$0",
		},
		{
			"trigger": "Frame:GetDebugName\t()",
			"contents": "${1:Frame}:GetDebugName()$0",
		},
		{
			"trigger": "Frame:GetDepth\t()",
			"contents": "${1:Frame}:GetDepth()$0",
		},
		{
			"trigger": "Frame:GetDontSavePosition\t()",
			"contents": "${1:Frame}:GetDontSavePosition()$0",
		},
		{
			"trigger": "Frame:GetEffectiveAlpha\t()",
			"contents": "${1:Frame}:GetEffectiveAlpha()$0",
		},
		{
			"trigger": "Frame:GetEffectiveDepth\t()",
			"contents": "${1:Frame}:GetEffectiveDepth()$0",
		},
		{
			"trigger": "Frame:GetEffectivelyFlattensRenderLayers\t()",
			"contents": "${1:Frame}:GetEffectivelyFlattensRenderLayers()$0",
		},
		{
			"trigger": "Frame:GetEffectiveScale\t()",
			"contents": "${1:Frame}:GetEffectiveScale()$0",
		},
		{
			"trigger": "Frame:GetFlattensRenderLayers\t()",
			"contents": "${1:Frame}:GetFlattensRenderLayers()$0",
		},
		{
			"trigger": "Frame:GetFrameLevel\t()",
			"contents": "${1:Frame}:GetFrameLevel()$0",
		},
		{
			"trigger": "Frame:GetFrameStrata\t()",
			"contents": "${1:Frame}:GetFrameStrata()$0",
		},
		{
			"trigger": "Frame:GetHeight\t()",
			"contents": "${1:Frame}:GetHeight()$0",
		},
		{
			"trigger": "Frame:GetHitRectInsets\t()",
			"contents": "${1:Frame}:GetHitRectInsets()$0",
		},
		{
			"trigger": "Frame:GetHyperlinksEnabled\t()",
			"contents": "${1:Frame}:GetHyperlinksEnabled()$0",
		},
		{
			"trigger": "Frame:GetID\t()",
			"contents": "${1:Frame}:GetID()$0",
		},
		{
			"trigger": "Frame:GetLeft\t()",
			"contents": "${1:Frame}:GetLeft()$0",
		},
		{
			"trigger": "Frame:GetMaxResize\t()",
			"contents": "${1:Frame}:GetMaxResize()$0",
		},
		{
			"trigger": "Frame:GetMinResize\t()",
			"contents": "${1:Frame}:GetMinResize()$0",
		},
		{
			"trigger": "Frame:GetName\t()",
			"contents": "${1:Frame}:GetName()$0",
		},
		{
			"trigger": "Frame:GetNumChildren\t()",
			"contents": "${1:Frame}:GetNumChildren()$0",
		},
		{
			"trigger": "Frame:GetNumPoints\t()",
			"contents": "${1:Frame}:GetNumPoints()$0",
		},
		{
			"trigger": "Frame:GetNumRegions\t()",
			"contents": "${1:Frame}:GetNumRegions()$0",
		},
		{
			"trigger": "Frame:GetObjectType\t()",
			"contents": "${1:Frame}:GetObjectType()$0",
		},
		{
			"trigger": "Frame:GetParent\t()",
			"contents": "${1:Frame}:GetParent()$0",
		},
		{
			"trigger": "Frame:GetPoint\t(index)",
			"contents": "${1:Frame}:GetPoint(${2:index})$0",
		},
		{
			"trigger": "Frame:GetPropagateKeyboardInput\t()",
			"contents": "${1:Frame}:GetPropagateKeyboardInput()$0",
		},
		{
			"trigger": "Frame:GetRect\t()",
			"contents": "${1:Frame}:GetRect()$0",
		},
		{
			"trigger": "Frame:GetRegions\t()",
			"contents": "${1:Frame}:GetRegions()$0",
		},
		{
			"trigger": "Frame:GetRight\t()",
			"contents": "${1:Frame}:GetRight()$0",
		},
		{
			"trigger": "Frame:GetScale\t()",
			"contents": "${1:Frame}:GetScale()$0",
		},
		{
			"trigger": "Frame:GetScript\t(\"scriptType\")",
			"contents": "${1:Frame}:GetScript(\"${2:scriptType}\")$0",
		},
		{
			"trigger": "Frame:GetSize\t()",
			"contents": "${1:Frame}:GetSize()$0",
		},
		{
			"trigger": "Frame:GetTop\t()",
			"contents": "${1:Frame}:GetTop()$0",
		},
		{
			"trigger": "Frame:GetWidth\t()",
			"contents": "${1:Frame}:GetWidth()$0",
		},
		{
			"trigger": "Frame:HasScript\t(\"scriptType\")",
			"contents": "${1:Frame}:HasScript(\"${2:scriptType}\")$0",
		},
		{
			"trigger": "Frame:Hide\t()",
			"contents": "${1:Frame}:Hide()$0",
		},
		{
			"trigger": "Frame:HookScript\t(\"scriptType\", handler)",
			"contents": "${1:Frame}:HookScript(\"${2:scriptType}\", ${3:handler})$0",
		},
		{
			"trigger": "Frame:IgnoreDepth\t(enable)",
			"contents": "${1:Frame}:IgnoreDepth(${2:enable})$0",
		},
		{
			"trigger": "Frame:IsClampedToScreen\t()",
			"contents": "${1:Frame}:IsClampedToScreen()$0",
		},
		{
			"trigger": "Frame:IsDragging\t()",
			"contents": "${1:Frame}:IsDragging()$0",
		},
		{
			"trigger": "Frame:IsEventRegistered\t(\"event\")",
			"contents": "${1:Frame}:IsEventRegistered(\"${2:event}\")$0",
		},
		{
			"trigger": "Frame:IsForbidden\t()",
			"contents": "${1:Frame}:IsForbidden()$0",
		},
		{
			"trigger": "Frame:IsIgnoringDepth\t()",
			"contents": "${1:Frame}:IsIgnoringDepth()$0",
		},
		{
			"trigger": "Frame:IsIgnoringParentAlpha\t()",
			"contents": "${1:Frame}:IsIgnoringParentAlpha()$0",
		},
		{
			"trigger": "Frame:IsIgnoringParentScale\t()",
			"contents": "${1:Frame}:IsIgnoringParentScale()$0",
		},
		{
			"trigger": "Frame:IsJoystickEnabled\t()",
			"contents": "${1:Frame}:IsJoystickEnabled()$0",
		},
		{
			"trigger": "Frame:IsKeyboardEnabled\t()",
			"contents": "${1:Frame}:IsKeyboardEnabled()$0",
		},
		{
			"trigger": "Frame:IsMouseClickEnabled\t()",
			"contents": "${1:Frame}:IsMouseClickEnabled()$0",
		},
		{
			"trigger": "Frame:IsMouseEnabled\t()",
			"contents": "${1:Frame}:IsMouseEnabled()$0",
		},
		{
			"trigger": "Frame:IsMouseMotionEnabled\t()",
			"contents": "${1:Frame}:IsMouseMotionEnabled()$0",
		},
		{
			"trigger": "Frame:IsMouseOver\t([topOffset], [leftOffset], [bottomOffset], [rightOffset])",
			"contents": "${1:Frame}:IsMouseOver(${2:[topOffset]}, ${3:[leftOffset]}, ${4:[bottomOffset]}, ${5:[rightOffset]})$0",
		},
		{
			"trigger": "Frame:IsMouseWheelEnabled\t()",
			"contents": "${1:Frame}:IsMouseWheelEnabled()$0",
		},
		{
			"trigger": "Frame:IsMovable\t()",
			"contents": "${1:Frame}:IsMovable()$0",
		},
		{
			"trigger": "Frame:IsObjectLoaded\t()",
			"contents": "${1:Frame}:IsObjectLoaded()$0",
		},
		{
			"trigger": "Frame:IsObjectType\t()",
			"contents": "${1:Frame}:IsObjectType()$0",
		},
		{
			"trigger": "Frame:IsProtected\t()",
			"contents": "${1:Frame}:IsProtected()$0",
		},
		{
			"trigger": "Frame:IsResizable\t()",
			"contents": "${1:Frame}:IsResizable()$0",
		},
		{
			"trigger": "Frame:IsShown\t()",
			"contents": "${1:Frame}:IsShown()$0",
		},
		{
			"trigger": "Frame:IsToplevel\t()",
			"contents": "${1:Frame}:IsToplevel()$0",
		},
		{
			"trigger": "Frame:IsUserPlaced\t()",
			"contents": "${1:Frame}:IsUserPlaced()$0",
		},
		{
			"trigger": "Frame:IsVisible\t()",
			"contents": "${1:Frame}:IsVisible()$0",
		},
		{
			"trigger": "Frame:Lower\t()",
			"contents": "${1:Frame}:Lower()$0",
		},
		{
			"trigger": "Frame:Raise\t()",
			"contents": "${1:Frame}:Raise()$0",
		},
		{
			"trigger": "Frame:RegisterAllEvents\t()",
			"contents": "${1:Frame}:RegisterAllEvents()$0",
		},
		{
			"trigger": "Frame:RegisterEvent\t(\"event\")",
			"contents": "${1:Frame}:RegisterEvent(\"${2:event}\")$0",
		},
		{
			"trigger": "Frame:RegisterForDrag\t(...)",
			"contents": "${1:Frame}:RegisterForDrag(${2:...})$0",
		},
		{
			"trigger": "Frame:RegisterUnitEvent\t(\"event\", \"unit1\", \"unit2\")",
			"contents": "${1:Frame}:RegisterUnitEvent(\"${2:event}\", \"${3:unit1}\", \"${4:unit2}\")$0",
		},
		{
			"trigger": "Frame:SetAllPoints\t([frame])",
			"contents": "${1:Frame}:SetAllPoints(${2:[frame]})$0",
		},
		{
			"trigger": "Frame:SetAlpha\t(alpha)",
			"contents": "${1:Frame}:SetAlpha(${2:alpha})$0",
		},
		{
			"trigger": "Frame:SetAttribute\t(\"name\", value)",
			"contents": "${1:Frame}:SetAttribute(${2:\"name\"}, ${3:value})$0",
		},
		{
			"trigger": "Frame:SetBackdrop\t(backdrop)",
			"contents": "${1:Frame}:SetBackdrop(${2:backdrop})$0",
		},
		{
			"trigger": "Frame:SetBackdropBorderColor\t(red, green, blue, [alpha])",
			"contents": "${1:Frame}:SetBackdropBorderColor(${2:red}, ${3:green}, ${4:blue}, ${5:[alpha]})$0",
		},
		{
			"trigger": "Frame:SetBackdropColor\t(red, green, blue, [alpha])",
			"contents": "${1:Frame}:SetBackdropColor(${2:red}, ${3:green}, ${4:blue}, ${5:[alpha]})$0",
		},
		{
			"trigger": "Frame:SetClampedToScreen\t(enable)",
			"contents": "${1:Frame}:SetClampedToScreen(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetClampRectInsets\t(left, right, top, bottom)",
			"contents": "${1:Frame}:SetClampRectInsets(${2:left}, ${3:right}, ${4:top}, ${5:bottom})$0",
		},
		{
			"trigger": "Frame:SetClipsChildren\t(enable)",
			"contents": "${1:Frame}:SetClipsChildren(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetDepth\t(depth)",
			"contents": "${1:Frame}:SetDepth(${2:depth})$0",
		},
		{
			"trigger": "Frame:SetDontSavePosition\t(enable)",
			"contents": "${1:Frame}:SetDontSavePosition(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetFlattensRenderLayers\t(enable)",
			"contents": "${1:Frame}:SetFlattensRenderLayers(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetFrameLevel\t(level)",
			"contents": "${1:Frame}:SetFrameLevel(${2:level})$0",
		},
		{
			"trigger": "Frame:SetFrameStrata\t(\"strata\")",
			"contents": "${1:Frame}:SetFrameStrata(\"${2:strata}\")$0",
		},
		{
			"trigger": "Frame:SetHeight\t(height)",
			"contents": "${1:Frame}:SetHeight(${2:height})$0",
		},
		{
			"trigger": "Frame:SetHitRectInsets\t(left, right, top, bottom)",
			"contents": "${1:Frame}:SetHitRectInsets(${2:left}, ${3:right}, ${4:top}, ${5:bottom})$0",
		},
		{
			"trigger": "Frame:SetHyperlinksEnabled\t(enable)",
			"contents": "${1:Frame}:SetHyperlinksEnabled(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetID\t(id)",
			"contents": "${1:Frame}:SetID(${2:id})$0",
		},
		{
			"trigger": "Frame:SetIgnoreParentAlpha\t(enable)",
			"contents": "${1:Frame}:SetIgnoreParentAlpha(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetIgnoreParentScale\t(enable)",
			"contents": "${1:Frame}:SetIgnoreParentScale(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetMaxResize\t(maxWidth, maxHeight)",
			"contents": "${1:Frame}:SetMaxResize(${2:maxWidth}, ${3:maxHeight})$0",
		},
		{
			"trigger": "Frame:SetMinResize\t(minWidth, minHeight)",
			"contents": "${1:Frame}:SetMinResize(${2:minWidth}, ${3:minHeight})$0",
		},
		{
			"trigger": "Frame:SetMouseClickEnabled\t(enable)",
			"contents": "${1:Frame}:SetMouseClickEnabled(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetMouseMotionEnabled\t(enable)",
			"contents": "${1:Frame}:SetMouseMotionEnabled(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetMovable\t(enable)",
			"contents": "${1:Frame}:SetMovable(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetParent\t(frame)",
			"contents": "${1:Frame}:SetParent(${2:frame})$0",
		},
		{
			"trigger": "Frame:SetPoint\t(\"point\", [relativeTo], [\"relativePoint\"], [xOffset], [yOffset])",
			"contents": "${1:Frame}:SetPoint(\"${2:point}\", ${3:[relativeTo]}, \"${4:[relativePoint]}\", ${5:[xOffset]}, ${6:[yOffset]})$0",
		},
		{
			"trigger": "Frame:SetPropagateKeyboardInput\t(enable)",
			"contents": "${1:Frame}:SetPropagateKeyboardInput(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetResizable\t(enable)",
			"contents": "${1:Frame}:SetResizable(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetScale\t(scale)",
			"contents": "${1:Frame}:SetScale(${2:scale})$0",
		},
		{
			"trigger": "Frame:SetScript\t(\"scriptType\", handler)",
			"contents": "${1:Frame}:SetScript(\"${2:scriptType}\", ${3:handler})$0",
		},
		{
			"trigger": "Frame:SetShown\t(enable)",
			"contents": "${1:Frame}:SetShown(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetSize\t(width, height)",
			"contents": "${1:Frame}:SetSize(${2:width}, ${3:height})$0",
		},
		{
			"trigger": "Frame:SetToplevel\t(enable)",
			"contents": "${1:Frame}:SetToplevel(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetUserPlaced\t(enable)",
			"contents": "${1:Frame}:SetUserPlaced(${2:enable})$0",
		},
		{
			"trigger": "Frame:SetWidth\t(width)",
			"contents": "${1:Frame}:SetWidth(${2:width})$0",
		},
		{
			"trigger": "Frame:Show\t()",
			"contents": "${1:Frame}:Show()$0",
		},
		{
			"trigger": "Frame:StartMoving\t()",
			"contents": "${1:Frame}:StartMoving()$0",
		},
		{
			"trigger": "Frame:StartSizing\t()",
			"contents": "${1:Frame}:StartSizing()$0",
		},
		{
			"trigger": "Frame:StopAnimating\t()",
			"contents": "${1:Frame}:StopAnimating()$0",
		},
		{
			"trigger": "Frame:StopMovingOrSizing\t()",
			"contents": "${1:Frame}:StopMovingOrSizing()$0",
		},
		{
			"trigger": "Frame:UnregisterAllEvents\t()",
			"contents": "${1:Frame}:UnregisterAllEvents()$0",
		},
		{
			"trigger": "Frame:UnregisterEvent\t(\"event\")",
			"contents": "${1:Frame}:UnregisterEvent(\"${2:event}\")$0",
		},




		{
			"trigger": "_Frame:CanChangeAttribute\t()",
			"contents": "${1:enabled} = ${2:Frame}:CanChangeAttribute()$0",
		},
		{
			"trigger": "_Frame:CanChangeProtectedState\t()",
			"contents": "${1:canChange} = ${2:Frame}:CanChangeProtectedState()$0",
		},
		{
			"trigger": "_Frame:CreateFontString\t([\"name\"], [\"layer\"], [\"inherits\"])",
			"contents": "${1:fontstring} = ${2:Frame}:CreateFontString(${3:[\"name\"]}, ${4:[\"layer\"]}, ${5:[\"inherits\"]})$0",
		},
		{
			"trigger": "_Frame:CreateLine\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:texture} = ${2:Frame}:CreateLine(${3:[\"name\"]}, \"${4:[layer]}\", ${5:[\"inherits\"]}, ${6:[sublevel]})$0",
		},
		{
			"trigger": "_Frame:CreateMaskTexture\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:texture} = ${2:Frame}:CreateMaskTexture(${3:[\"name\"]}, \"${4:[layer]}\", ${5:[\"inherits\"]}, ${6:[sublevel]})$0",
		},
		{
			"trigger": "_Frame:CreateTexture\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:texture} = ${2:Frame}:CreateTexture(${3:[\"name\"]}, \"${4:[layer]}\", ${5:[\"inherits\"]}, ${6:[sublevel]})$0",
		},
		{
			"trigger": "_Frame:DoesClipChildren\t()",
			"contents": "${1:doesClip} = ${2:Frame}:DoesClipChildren()$0",
		},
		{
			"trigger": "_Frame:GetAlpha\t()",
			"contents": "${1:alpha} = ${2:Frame}:GetAlpha()$0",
		},
		{
			"trigger": "_Frame:GetAnimationGroups\t()",
			"contents": "${1:...} = ${2:Frame}:GetAnimationGroups()$0",
		},
		{
			"trigger": "_Frame:GetAttribute\t(\"name\")",
			"contents": "${1:value} = ${2:Frame}:GetAttribute(${3:\"name\"})$0",
		},
		{
			"trigger": "_Frame:GetBackdrop\t()",
			"contents": "${1:backdrop} = ${2:Frame}:GetBackdrop()$0",
		},
		{
			"trigger": "_Frame:GetBackdropBorderColor\t()",
			"contents": "${1:red}, ${2:green}, ${3:blue}, ${4:alpha} = ${5:Frame}:GetBackdropBorderColor()$0",
		},
		{
			"trigger": "_Frame:GetBackdropColor\t()",
			"contents": "${1:red}, ${2:green}, ${3:blue}, ${4:alpha} = ${5:Frame}:GetBackdropColor()$0",
		},
		{
			"trigger": "_Frame:GetBottom\t()",
			"contents": "${1:bottom} = ${2:Frame}:GetBottom()$0",
		},
		{
			"trigger": "_Frame:GetBoundsRect\t()",
			"contents": "${1:left}, ${2:bottom}, ${3:width}, ${4:height} = ${5:Frame}:GetBoundsRect()$0",
		},
		{
			"trigger": "_Frame:GetCenter\t()",
			"contents": "${1:x}, ${2:y} = ${3:Frame}:GetCenter()$0",
		},
		{
			"trigger": "_Frame:GetChildren\t()",
			"contents": "${1:...} = ${2:Frame}:GetChildren()$0",
		},
		{
			"trigger": "_Frame:GetClampRectInsets\t()",
			"contents": "${1:left}, ${2:right}, ${3:top}, ${4:bottom} = ${5:Frame}:GetClampRectInsets()$0",
		},
		{
			"trigger": "_Frame:GetDebugName\t()",
			"contents": "${1:name} = ${2:Frame}:GetDebugName()$0",
		},
		{
			"trigger": "_Frame:GetDepth\t()",
			"contents": "${1:depth} = ${2:Frame}:GetDepth()$0",
		},
		{
			"trigger": "_Frame:GetDontSavePosition\t()",
			"contents": "${1:saved} = ${2:Frame}:GetDontSavePosition()$0",
		},
		{
			"trigger": "_Frame:GetEffectiveAlpha\t()",
			"contents": "${1:alpha} = ${2:Frame}:GetEffectiveAlpha()$0",
		},
		{
			"trigger": "_Frame:GetEffectiveDepth\t()",
			"contents": "${1:depth} = ${2:Frame}:GetEffectiveDepth()$0",
		},
		{
			"trigger": "_Frame:GetEffectivelyFlattensRenderLayers\t()",
			"contents": "${1:doesFlattens} = ${2:Frame}:GetEffectivelyFlattensRenderLayers()$0",
		},
		{
			"trigger": "_Frame:GetEffectiveScale\t()",
			"contents": "${1:scale} = ${2:Frame}:GetEffectiveScale()$0",
		},
		{
			"trigger": "_Frame:GetFlattensRenderLayers\t()",
			"contents": "${1:doesFlattens} = ${2:Frame}:GetFlattensRenderLayers()$0",
		},
		{
			"trigger": "_Frame:GetFrameLevel\t()",
			"contents": "${1:level} = ${2:Frame}:GetFrameLevel()$0",
		},
		{
			"trigger": "_Frame:GetFrameStrata\t()",
			"contents": "${1:strata} = ${2:Frame}:GetFrameStrata()$0",
		},
		{
			"trigger": "_Frame:GetHeight\t()",
			"contents": "${1:height} = ${2:Frame}:GetHeight()$0",
		},
		{
			"trigger": "_Frame:GetHitRectInsets\t()",
			"contents": "${1:left}, ${2:right}, ${3:top}, ${4:bottom} = ${5:Frame}:GetHitRectInsets()$0",
		},
		{
			"trigger": "_Frame:GetHyperlinksEnabled\t()",
			"contents": "${1:enabled} = ${2:Frame}:GetHyperlinksEnabled()$0",
		},
		{
			"trigger": "_Frame:GetID\t()",
			"contents": "${1:id} = ${2:Frame}:GetID()$0",
		},
		{
			"trigger": "_Frame:GetLeft\t()",
			"contents": "${1:left} = ${2:Frame}:GetLeft()$0",
		},
		{
			"trigger": "_Frame:GetMaxResize\t()",
			"contents": "${1:maxWidth}, ${2:maxHeight} = ${3:Frame}:GetMaxResize()$0",
		},
		{
			"trigger": "_Frame:GetMinResize\t()",
			"contents": "${1:minWidth}, ${2:minHeight} = ${3:Frame}:GetMinResize()$0",
		},
		{
			"trigger": "_Frame:GetName\t()",
			"contents": "${1:name} = ${2:Frame}:GetName()$0",
		},
		{
			"trigger": "_Frame:GetNumChildren\t()",
			"contents": "${1:numChildren} = ${2:Frame}:GetNumChildren()$0",
		},
		{
			"trigger": "_Frame:GetNumPoints\t()",
			"contents": "${1:numPoints} = ${2:Frame}:GetNumPoints()$0",
		},
		{
			"trigger": "_Frame:GetNumRegions\t()",
			"contents": "${1:numRegions} = ${2:Frame}:GetNumRegions()$0",
		},
		{
			"trigger": "_Frame:GetObjectType\t()",
			"contents": "${1:type} = ${2:Frame}:GetObjectType()$0",
		},
		{
			"trigger": "_Frame:GetPoint\t(index)",
			"contents": "${1:point}, ${2:relativeTo}, ${3:relativePoint}, ${4:xOffset}, ${5:yOffset} = ${6:Frame}:GetPoint(${7:index})$0",
		},
		{
			"trigger": "_Frame:GetPropagateKeyboardInput\t()",
			"contents": "${1:propagate} = ${2:Frame}:GetPropagateKeyboardInput()$0",
		},
		{
			"trigger": "_Frame:GetRect\t()",
			"contents": "${1:left}, ${2:bottom}, ${3:width}, ${4:height} = ${5:Frame}:GetRect()$0",
		},
		{
			"trigger": "_Frame:GetRegions\t()",
			"contents": "${1:...} = ${2:Frame}:GetRegions()$0",
		},
		{
			"trigger": "_Frame:GetRight\t()",
			"contents": "${1:right} = ${2:Frame}:GetRight()$0",
		},
		{
			"trigger": "_Frame:GetScale\t()",
			"contents": "${1:scale} = ${2:Frame}:GetScale()$0",
		},
		{
			"trigger": "_Frame:GetScript\t(\"scriptType\")",
			"contents": "${1:handler} = ${2:Frame}:GetScript(\"${3:scriptType}\")$0",
		},
		{
			"trigger": "_Frame:GetSize\t()",
			"contents": "${1:width}, ${2:height} = ${3:Frame}:GetSize()$0",
		},
		{
			"trigger": "_Frame:GetTop\t()",
			"contents": "${1:top} = ${2:Frame}:GetTop()$0",
		},
		{
			"trigger": "_Frame:GetWidth\t()",
			"contents": "${1:width} = ${2:Frame}:GetWidth()$0",
		},
		{
			"trigger": "_Frame:HasScript\t(\"scriptType\")",
			"contents": "${1:hasScript} = ${2:Frame}:HasScript(\"${3:scriptType}\")$0",
		},
		{
			"trigger": "_Frame:IsClampedToScreen\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsClampedToScreen()$0",
		},
		{
			"trigger": "_Frame:IsDragging\t()",
			"contents": "${1:isDragging} = ${2:Frame}:IsDragging()$0",
		},
		{
			"trigger": "_Frame:IsEventRegistered\t(\"event\")",
			"contents": "${1:registered}, ${2:unit1}, ${3:unit2} = ${4:Frame}:IsEventRegistered(\"${5:event}\")$0",
		},
		{
			"trigger": "_Frame:IsForbidden\t()",
			"contents": "${1:isForbidden} = ${2:Frame}:IsForbidden()$0",
		},
		{
			"trigger": "_Frame:IsIgnoringDepth\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsIgnoringDepth()$0",
		},
		{
			"trigger": "_Frame:IsIgnoringParentAlpha\t()",
			"contents": "${1:isIgnoring} = ${2:Frame}:IsIgnoringParentAlpha()$0",
		},
		{
			"trigger": "_Frame:IsIgnoringParentScale\t()",
			"contents": "${1:isIgnoring} = ${2:Frame}:IsIgnoringParentScale()$0",
		},
		{
			"trigger": "_Frame:IsJoystickEnabled\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsJoystickEnabled()$0",
		},
		{
			"trigger": "_Frame:IsKeyboardEnabled\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsKeyboardEnabled()$0",
		},
		{
			"trigger": "_Frame:IsMouseClickEnabled\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsMouseClickEnabled()$0",
		},
		{
			"trigger": "_Frame:IsMouseEnabled\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsMouseEnabled()$0",
		},
		{
			"trigger": "_Frame:IsMouseMotionEnabled\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsMouseMotionEnabled()$0",
		},
		{
			"trigger": "_Frame:IsMouseOver\t([topOffset], [leftOffset], [bottomOffset], [rightOffset])",
			"contents": "${1:isOver} = ${2:Frame}:IsMouseOver(${3:[topOffset]}, ${4:[leftOffset]}, ${5:[bottomOffset]}, ${6:[rightOffset]})$0",
		},
		{
			"trigger": "_Frame:IsMouseWheelEnabled\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsMouseWheelEnabled()$0",
		},
		{
			"trigger": "_Frame:IsMovable\t()",
			"contents": "${1:movable} = ${2:Frame}:IsMovable()$0",
		},
		{
			"trigger": "_Frame:IsObjectLoaded\t()",
			"contents": "${1:loaded} = ${2:Frame}:IsObjectLoaded()$0",
		},
		{
			"trigger": "_Frame:IsObjectType\t(\"type\")",
			"contents": "${1:isType} = ${2:Frame}:IsObjectType(\"${3:type}\")$0",
		},
		{
			"trigger": "_Frame:IsProtected\t()",
			"contents": "${1:isProtected}, ${2:explicit} = ${3:Frame}:IsProtected()$0",
		},
		{
			"trigger": "_Frame:IsResizable\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsResizable()$0",
		},
		{
			"trigger": "_Frame:IsShown\t()",
			"contents": "${1:shown} = ${2:Frame}:IsShown()$0",
		},
		{
			"trigger": "_Frame:IsToplevel\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsToplevel()$0",
		},
		{
			"trigger": "_Frame:IsUserPlaced\t()",
			"contents": "${1:enabled} = ${2:Frame}:IsUserPlaced()$0",
		},
		{
			"trigger": "_Frame:IsVisible\t()",
			"contents": "${1:visible} = ${2:Frame}:IsVisible()$0",
		},




		{
			"trigger": "_Frame\thelp",
			"contents": "Frame = {\n\tinherits = {\n\t\t\"Frame\",\n\t\t\"ScriptObject\",\n\t\t\"VisibleRegion\",\n\t\t\"Region\",\n\t\t\"ParentedObject\",\n\t\t\"UIObject\",\n\t},\n\thandlers = {\n\t\t[\"OnAttributeChanged\"] = \"self, name, value\", -- Run when a frame attribute is changed\n\t\t[\"OnChar\"] = \"self, text\", -- Run for each text character typed in the frame\n\t\t[\"OnDisable\"] = \"self\", -- Run when the frame is disabled\n\t\t[\"OnDragStart\"] = \"self, button\", -- Run when the mouse is dragged starting in the frame\n\t\t[\"OnDragStop\"] = \"self\", -- Run when the mouse button is released after a drag started in the frame\n\t\t[\"OnEnable\"] = \"self\", -- Run when the frame is enabled\n\t\t[\"OnEnter\"] = \"self, motion\", -- Run when the mouse cursor enters the frame's interactive area\n\t\t[\"OnEvent\"] = \"self, event, ...\", -- Run whenever an event fires for which the frame is registered\n\t\t[\"OnHide\"] = \"self\", -- Run when the frame's visbility changes to hidden\n\t\t[\"OnHyperlinkClick\"] = \"self, link, text, button, region, left, bottom, width, height\", -- Run when a mouse button is pressed while the cursor is over the hyperlink\n\t\t[\"OnHyperlinkEnter\"] = \"self, link, text, region, left, bottom, width, height\", -- Run when the mouse cursor enters the hyperlink's interactive area\n\t\t[\"OnHyperlinkLeave\"] = \"self\", -- Run when the mouse cursor leaves the hyperlink's interactive area\n\t\t[\"OnKeyDown\"] = \"self, key\", -- Run when a keyboard key is pressed if the frame is keyboard enabled\n\t\t[\"OnKeyUp\"] = \"self, key\", -- Run when a keyboard key is released if the frame is keyboard enabled\n\t\t[\"OnLeave\"] = \"self, motion\", -- Run when the mouse cursor leaves the frame's interactive area\n\t\t[\"OnLoad\"] = \"self\", -- Run when the frame is created\n\t\t[\"OnMouseDown\"] = \"self, button\", -- Run when a mouse button is pressed while the cursor is over the frame\n\t\t[\"OnMouseUp\"] = \"self, button, upInside\", -- Run when the mouse button is released following a mouse down action in the frame\n\t\t[\"OnMouseWheel\"] = \"self, delta\", -- Run when the frame receives a mouse wheel scrolling action\n\t\t[\"OnReceiveDrag\"] = \"self\", -- Run when the mouse button is released after dragging into the frame\n\t\t[\"OnShow\"] = \"self\", -- Run when the frame becomes visible\n\t\t[\"OnSizeChanged\"] = \"self, width, height\", -- Run when a frame's size changes\n\t\t[\"OnUpdate\"] = \"self, elapsed\", -- Run each time the screen is drawn by the game engine\n\t},\n\tmethods = {\n\t\t\"CanChangeAttribute\", -- Returns whether secure frame attributes can currently be changed\n\t\t\"CanChangeProtectedState\", -- Returns whether protected properties of the region can be changed by non-secure scripts\n\t\t\"ClearAllPoints\", -- Removes all anchor points from the region\n\t\t\"CreateAnimationGroup\", -- Creates a new animation group as a child of the region\n\t\t\"CreateFontString\", -- Creates a new font string object as a child of the frame\n\t\t\"CreateLine\", -- Creates a new line object as a child of the frame\n\t\t\"CreateMaskTexture\", -- Creates a new mask texture object as a child of the frame\n\t\t\"CreateTexture\", -- Creates a new texture object as a child of the frame\n\t\t\"DisableDrawLayer\", -- Prevents display of all child objects of the frame on a specified graphics layer\n\t\t\"DoesClipChildren\", -- Returns whether the frame's childrens are clipped off when exceeding the it's boundaries\n\t\t\"EnableDrawLayer\", -- Allows display of all child objects of the frame on a specified graphics layer\n\t\t\"EnableJoystick\", -- Enables or disables joystick interactivity for the frame\n\t\t\"EnableKeyboard\", -- Enables or disables keyboard interactivity for the frame\n\t\t\"EnableMouse\", -- Enables or disables mouse interactivity for the frame\n\t\t\"EnableMouseWheel\", -- Enables or disables mouse wheel interactivity for the frame\n\t\t\"GetAlpha\", -- Returns the opacity of the region relative to it's parent\n\t\t\"GetAnimationGroups\", -- Returns a list of animation groups belonging to the region\n\t\t\"GetAttribute\", -- Returns the value of a secure frame attribute\n\t\t\"GetBackdrop\", -- Returns information about the frame's backdrop graphic\n\t\t\"GetBackdropBorderColor\", -- Returns the shading color for the frame's border graphic\n\t\t\"GetBackdropColor\", -- Returns the shading color for the frame's background graphic\n\t\t\"GetBottom\", -- Returns the distance from the bottom of the screen to the bottom of the region\n\t\t\"GetBoundsRect\", -- Returns the position and dimension of the smallest area enclosing the frame and it's childrens\n\t\t\"GetCenter\", -- Returns the screen coordinates of the region's center\n\t\t\"GetChildren\", -- Returns a list of child frames of the frame\n\t\t\"GetClampRectInsets\", -- Returns offsets from the frame's edges used when limiting user movement or resizing of the frame\n\t\t\"GetDebugName\", -- Returns the widget object's debug name\n\t\t\"GetDepth\", -- Returns the 3D depth of the frame\n\t\t\"GetDontSavePosition\", -- Returns whether the position is included for the automatic saving and restoration\n\t\t\"GetEffectiveAlpha\", -- Returns the overall opacity of the frame\n\t\t\"GetEffectiveDepth\", -- Returns the overall 3D depth of the frame\n\t\t\"GetEffectivelyFlattensRenderLayers\", -- Returns whether the frame's childrens are effectively rendered at the same layer level\n\t\t\"GetEffectiveScale\", -- Returns the overall scale factor of the frame\n\t\t\"GetFlattensRenderLayers\", -- Returns whether the frame's childrens are rendered at the same layer level\n\t\t\"GetFrameLevel\", -- Returns the level at which the frame is layered relative to others in its strata\n\t\t\"GetFrameStrata\", -- Returns the general layering strata of the frame\n\t\t\"GetHeight\", -- Returns the height of the region\n\t\t\"GetHitRectInsets\", -- Returns the insets from the frame's edges which determine its mouse-interactable area\n\t\t\"GetHyperlinksEnabled\", -- Returns whether hyperlinks in the frame's text are interactive\n\t\t\"GetID\", -- Returns the frame's numeric identifier\n\t\t\"GetLeft\", -- Returns the distance from the left edge of the screen to the left edge of the region\n\t\t\"GetMaxResize\", -- Returns the maximum size of the frame for user resizing\n\t\t\"GetMinResize\", -- Returns the minimum size of the frame for user resizing\n\t\t\"GetName\", -- Returns the widget object's name\n\t\t\"GetNumChildren\", -- Returns the number of child frames belonging to the frame\n\t\t\"GetNumPoints\", -- Returns the number of anchor points defined for the region\n\t\t\"GetNumRegions\", -- Returns the number of non-frame child regions belonging to the frame\n\t\t\"GetObjectType\", -- Returns the object's widget type\n\t\t\"GetParent\", -- Returns the object's parent object\n\t\t\"GetPoint\", -- Returns information about one of the region's anchor points\n\t\t\"GetPropagateKeyboardInput\", -- Returns whether the frame propagates keyboard events\n\t\t\"GetRect\", -- Returns the position and dimensions of the region\n\t\t\"GetRegions\", -- Returns a list of non-frame child regions belonging to the frame\n\t\t\"GetRight\", -- Returns the distance from the left edge of the screen to the right edge of the region\n\t\t\"GetScale\", -- Returns the frame's scale factor\n\t\t\"GetScript\", -- Returns the widget's handler function for a script\n\t\t\"GetSize\", -- Returns the width and height of the region\n\t\t\"GetTop\", -- Returns the distance from the bottom of the screen to the top of the region\n\t\t\"GetWidth\", -- Returns the width of the region\n\t\t\"HasScript\", -- Returns whether the widget supports a script handler\n\t\t\"Hide\", -- Hides the region\n\t\t\"HookScript\", -- Securely hooks a script handler\n\t\t\"IgnoreDepth\", -- Sets whether the frame's 3D depth property is ignored\n\t\t\"IsClampedToScreen\", -- Returns whether the frame's boundaries are limited to those of the screen\n\t\t\"IsDragging\", -- Returns whether the region is currently being dragged\n\t\t\"IsEventRegistered\", -- Returns whether the frame is registered for a given event\n\t\t\"IsForbidden\", -- Returns if this widget's methods may only be called from secure execution paths\n\t\t\"IsIgnoringDepth\", -- Returns whether the frame's depth property is ignored\n\t\t\"IsIgnoringParentAlpha\", -- Returns if the region is ignoring it's parent alpha changes\n\t\t\"IsIgnoringParentScale\", -- Returns if the region is ignoring it's parent scale changes\n\t\t\"IsJoystickEnabled\", -- Returns whether joystick interactivity is enabled for the frame\n\t\t\"IsKeyboardEnabled\", -- Returns whether keyboard interactivity is enabled for the frame\n\t\t\"IsMouseClickEnabled\", -- Returns whether mouse click interactivity is enabled for the frame\n\t\t\"IsMouseEnabled\", -- Returns whether mouse interactivity is enabled for the frame\n\t\t\"IsMouseMotionEnabled\", -- Returns whether mouse motion interactivity is enabled for the frame\n\t\t\"IsMouseOver\", -- Returns whether the mouse cursor is over the given region\n\t\t\"IsMouseWheelEnabled\", -- Returns whether mouse wheel interactivity is enabled for the frame\n\t\t\"IsMovable\", -- Returns whether the frame can be moved by the user\n\t\t\"IsObjectLoaded\", -- Returns whether the region is loaded\n\t\t\"IsObjectType\", -- Returns whether the object belongs to a given widget type\n\t\t\"IsProtected\", -- Returns whether the region is protected\n\t\t\"IsResizable\", -- Returns whether the frame can be resized by the user\n\t\t\"IsShown\", -- Returns whether the region is shown\n\t\t\"IsToplevel\", -- Returns whether the frame is automatically raised to the front when clicked\n\t\t\"IsUserPlaced\", -- Returns whether the frame is flagged for automatic saving and restoration of position and dimensions\n\t\t\"IsVisible\", -- Returns whether the region is visible\n\t\t\"Lower\", -- Reduces the frame's frame level below all other frames in its strata\n\t\t\"Raise\", -- Increases the frame's frame level above all other frames in its strata\n\t\t\"RegisterAllEvents\", -- Registers the frame for all events\n\t\t\"RegisterEvent\", -- Registers the frame for an event\n\t\t\"RegisterForDrag\", -- Registers the frame for dragging\n\t\t\"RegisterUnitEvent\", -- Registers the frame for an event for the specified units\n\t\t\"SetAllPoints\", -- Sets all anchor points of the region to match those of another region\n\t\t\"SetAlpha\", -- Sets the opacity of the region relative to it's parent\n\t\t\"SetAttribute\", -- Sets a secure frame attribute\n\t\t\"SetBackdrop\", -- Sets a backdrop graphic for the frame\n\t\t\"SetBackdropBorderColor\", -- Sets a shading color for the frame's border graphic\n\t\t\"SetBackdropColor\", -- Sets a shading color for the frame's background graphic\n\t\t\"SetClampedToScreen\", -- Sets offsets from the frame's edges used when limiting user movement or resizing of the frame\n\t\t\"SetClampRectInsets\", -- Sets whether the frame's boundaries should be limited to those of the screen\n\t\t\"SetClipsChildren\", -- Sets whether the frame's childrens are clipped off when exceeding the it's boundaries\n\t\t\"SetDepth\", -- Sets the 3D depth of the frame\n\t\t\"SetDontSavePosition\", -- Set whether the position are included for the automatic saving and restoration\n\t\t\"SetFlattensRenderLayers\", -- Sets the frame's childrens to be rendered at the same layer level\n\t\t\"SetFrameLevel\", -- Sets the level at which the frame is layered relative to others in its strata\n\t\t\"SetFrameStrata\", -- Sets the general layering strata of the frame\n\t\t\"SetHeight\", -- Sets the region's height\n\t\t\"SetHitRectInsets\", -- Sets the insets from the frame's edges which determine its mouse-interactable area\n\t\t\"SetHyperlinksEnabled\", -- Sets whether the hyperlinks in the frame's text are interactive\n\t\t\"SetID\", -- Sets a numeric identifier for the frame\n\t\t\"SetIgnoreParentAlpha\", -- Sets if the region should ignore it's parent alpha changes\n\t\t\"SetIgnoreParentScale\", -- Sets if the region should ignore it's parent scale changes\n\t\t\"SetMaxResize\", -- Sets the maximum size of the frame for user resizing\n\t\t\"SetMinResize\", -- Sets the minimum size of the frame for user resizing\n\t\t\"SetMouseClickEnabled\", -- Sets whether the frame can be clicked by the mouse\n\t\t\"SetMouseMotionEnabled\", -- Sets whether the frame's mouse motion is enabled\n\t\t\"SetMovable\", -- Sets whether the frame can be moved by the user\n\t\t\"SetParent\", -- Sets another frame the parent of this region\n\t\t\"SetPoint\", -- Sets an anchor point for the region\n\t\t\"SetPropagateKeyboardInput\", -- Sets whether the frame propagates the keyboard events\n\t\t\"SetResizable\", -- Sets whether the frame can be resized by the user\n\t\t\"SetScale\", -- Sets the frame's scale factor\n\t\t\"SetScript\", -- Sets the widget's handler function for a script\n\t\t\"SetShown\", -- Sets whether the region should be visible or hidden\n\t\t\"SetSize\", -- Sets the size of the region to the specified values\n\t\t\"SetToplevel\", -- Sets whether the frame should automatically come to the front when clicked\n\t\t\"SetUserPlaced\", -- Sets the frame for automatic saving and restoration of position and dimensions\n\t\t\"SetWidth\", -- Sets the region's width\n\t\t\"Show\", -- Shows the region\n\t\t\"StartMoving\", -- Begins repositioning the frame via mouse movement\n\t\t\"StartSizing\", -- Begins resizing the frame via mouse movement\n\t\t\"StopAnimating\", -- Stops any active animations involving the region or it's children\n\t\t\"StopMovingOrSizing\", -- Ends movement or resizing of the frame initiated with\n\t\t\"UnregisterAllEvents\", -- Unregisters the frame from any events for which it is registered\n\t\t\"UnregisterEvent\", -- Unregisters the frame for an event\n\t},\n}",
		},
	]
}
