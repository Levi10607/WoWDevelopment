{
	"scope": "source.lua - entity - punctuation - keyword - string",
	"completions": [
		{
			"trigger": "Button:CanChangeAttribute\t()",
			"contents": "${1:Button}:CanChangeAttribute()$0",
		},
		{
			"trigger": "Button:CanChangeProtectedState\t()",
			"contents": "${1:Button}:CanChangeProtectedState()$0",
		},
		{
			"trigger": "Button:ClearAllPoints\t()",
			"contents": "${1:Button}:ClearAllPoints()$0",
		},
		{
			"trigger": "Button:Click\t(\"button\", down)",
			"contents": "${1:Button}:Click(${2:[\"button\"]}, ${3:[down]})$0",
		},
		{
			"trigger": "Button:CreateAnimationGroup\t([\"name\"], [\"inheritsFrom\"])",
			"contents": "${1:Button}:CreateAnimationGroup(${2:[\"name\"]}, ${3:[\"inheritsFrom\"]})$0",
		},
		{
			"trigger": "Button:CreateFontString\t([\"name\"], [\"layer\"], [\"inherits\"])",
			"contents": "${1:Button}:CreateFontString(${2:[\"name\"]}, \"${3:[layer]}\", ${4:[\"inherits\"]})$0",
		},
		{
			"trigger": "Button:CreateLine\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:Button}:CreateLine(${2:[\"name\"]}, \"${3:[layer]}\", ${4:[\"inherits\"]}, ${5:[sublevel]})$0",
		},
		{
			"trigger": "Button:CreateMaskTexture\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:Button}:CreateMaskTexture(${2:[\"name\"]}, \"${3:[layer]}\", ${4:[\"inherits\"]}, ${5:[sublevel]})$0",
		},
		{
			"trigger": "Button:CreateTexture\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:Button}:CreateTexture(${2:[\"name\"]}, \"${3:[layer]}\", ${4:[\"inherits\"]}, ${5:[sublevel]})$0",
		},
		{
			"trigger": "Button:Disable\t()",
			"contents": "${1:Button}:Disable()$0",
		},
		{
			"trigger": "Button:DisableDrawLayer\t(\"layer\")",
			"contents": "${1:Button}:DisableDrawLayer(\"${2:layer}\")$0",
		},
		{
			"trigger": "Button:DoesClipChildren\t()",
			"contents": "${1:Button}:DoesClipChildren()$0",
		},
		{
			"trigger": "Button:Enable\t()",
			"contents": "${1:Button}:Enable()$0",
		},
		{
			"trigger": "Button:EnableDrawLayer\t(\"layer\")",
			"contents": "${1:Button}:EnableDrawLayer(\"${2:layer}\")$0",
		},
		{
			"trigger": "Button:EnableJoystick\t(enable)",
			"contents": "${1:Button}:EnableJoystick(${2:enable})$0",
		},
		{
			"trigger": "Button:EnableKeyboard\t(enable)",
			"contents": "${1:Button}:EnableKeyboard(${2:enable})$0",
		},
		{
			"trigger": "Button:EnableMouse\t(enable)",
			"contents": "${1:Button}:EnableMouse(${2:enable})$0",
		},
		{
			"trigger": "Button:EnableMouseWheel\t(enable)",
			"contents": "${1:Button}:EnableMouseWheel(${2:enable})$0",
		},
		{
			"trigger": "Button:GetAlpha\t()",
			"contents": "${1:Button}:GetAlpha()$0",
		},
		{
			"trigger": "Button:GetAnimationGroups\t()",
			"contents": "${1:Button}:GetAnimationGroups()$0",
		},
		{
			"trigger": "Button:GetAttribute\t(\"name\")",
			"contents": "${1:Button}:GetAttribute(${2:\"name\"})$0",
		},
		{
			"trigger": "Button:GetBackdrop\t()",
			"contents": "${1:Button}:GetBackdrop()$0",
		},
		{
			"trigger": "Button:GetBackdropBorderColor\t()",
			"contents": "${1:Button}:GetBackdropBorderColor()$0",
		},
		{
			"trigger": "Button:GetBackdropColor\t()",
			"contents": "${1:Button}:GetBackdropColor()$0",
		},
		{
			"trigger": "Button:GetBottom\t()",
			"contents": "${1:Button}:GetBottom()$0",
		},
		{
			"trigger": "Button:GetBoundsRect\t()",
			"contents": "${1:Button}:GetBoundsRect()$0",
		},
		{
			"trigger": "Button:GetButtonState\t()",
			"contents": "${1:Button}:GetButtonState()$0",
		},
		{
			"trigger": "Button:GetCenter\t()",
			"contents": "${1:Button}:GetCenter()$0",
		},
		{
			"trigger": "Button:GetChildren\t()",
			"contents": "${1:Button}:GetChildren()$0",
		},
		{
			"trigger": "Button:GetClampRectInsets\t()",
			"contents": "${1:Button}:GetClampRectInsets()$0",
		},
		{
			"trigger": "Button:GetDebugName\t()",
			"contents": "${1:Button}:GetDebugName()$0",
		},
		{
			"trigger": "Button:GetDepth\t()",
			"contents": "${1:Button}:GetDepth()$0",
		},
		{
			"trigger": "Button:GetDisabledFontObject\t()",
			"contents": "${1:Button}:GetDisabledFontObject()$0",
		},
		{
			"trigger": "Button:GetDisabledTexture\t()",
			"contents": "${1:Button}:GetDisabledTexture()$0",
		},
		{
			"trigger": "Button:GetDontSavePosition\t()",
			"contents": "${1:Button}:GetDontSavePosition()$0",
		},
		{
			"trigger": "Button:GetEffectiveAlpha\t()",
			"contents": "${1:Button}:GetEffectiveAlpha()$0",
		},
		{
			"trigger": "Button:GetEffectiveDepth\t()",
			"contents": "${1:Button}:GetEffectiveDepth()$0",
		},
		{
			"trigger": "Button:GetEffectivelyFlattensRenderLayers\t()",
			"contents": "${1:Button}:GetEffectivelyFlattensRenderLayers()$0",
		},
		{
			"trigger": "Button:GetEffectiveScale\t()",
			"contents": "${1:Button}:GetEffectiveScale()$0",
		},
		{
			"trigger": "Button:GetFlattensRenderLayers\t()",
			"contents": "${1:Button}:GetFlattensRenderLayers()$0",
		},
		{
			"trigger": "Button:GetFontString\t()",
			"contents": "${1:Button}:GetFontString()$0",
		},
		{
			"trigger": "Button:GetFrameLevel\t()",
			"contents": "${1:Button}:GetFrameLevel()$0",
		},
		{
			"trigger": "Button:GetFrameStrata\t()",
			"contents": "${1:Button}:GetFrameStrata()$0",
		},
		{
			"trigger": "Button:GetHeight\t()",
			"contents": "${1:Button}:GetHeight()$0",
		},
		{
			"trigger": "Button:GetHighlightFontObject\t()",
			"contents": "${1:Button}:GetHighlightFontObject()$0",
		},
		{
			"trigger": "Button:GetHighlightTexture\t()",
			"contents": "${1:Button}:GetHighlightTexture()$0",
		},
		{
			"trigger": "Button:GetHitRectInsets\t()",
			"contents": "${1:Button}:GetHitRectInsets()$0",
		},
		{
			"trigger": "Button:GetHyperlinksEnabled\t()",
			"contents": "${1:Button}:GetHyperlinksEnabled()$0",
		},
		{
			"trigger": "Button:GetID\t()",
			"contents": "${1:Button}:GetID()$0",
		},
		{
			"trigger": "Button:GetLeft\t()",
			"contents": "${1:Button}:GetLeft()$0",
		},
		{
			"trigger": "Button:GetMaxResize\t()",
			"contents": "${1:Button}:GetMaxResize()$0",
		},
		{
			"trigger": "Button:GetMinResize\t()",
			"contents": "${1:Button}:GetMinResize()$0",
		},
		{
			"trigger": "Button:GetMotionScriptsWhileDisabled\t()",
			"contents": "${1:Button}:GetMotionScriptsWhileDisabled()$0",
		},
		{
			"trigger": "Button:GetName\t()",
			"contents": "${1:Button}:GetName()$0",
		},
		{
			"trigger": "Button:GetNormalFontObject\t()",
			"contents": "${1:Button}:GetNormalFontObject()$0",
		},
		{
			"trigger": "Button:GetNormalTexture\t()",
			"contents": "${1:Button}:GetNormalTexture()$0",
		},
		{
			"trigger": "Button:GetNumChildren\t()",
			"contents": "${1:Button}:GetNumChildren()$0",
		},
		{
			"trigger": "Button:GetNumPoints\t()",
			"contents": "${1:Button}:GetNumPoints()$0",
		},
		{
			"trigger": "Button:GetNumRegions\t()",
			"contents": "${1:Button}:GetNumRegions()$0",
		},
		{
			"trigger": "Button:GetObjectType\t()",
			"contents": "${1:Button}:GetObjectType()$0",
		},
		{
			"trigger": "Button:GetParent\t()",
			"contents": "${1:Button}:GetParent()$0",
		},
		{
			"trigger": "Button:GetPoint\t(index)",
			"contents": "${1:Button}:GetPoint(${2:index})$0",
		},
		{
			"trigger": "Button:GetPropagateKeyboardInput\t()",
			"contents": "${1:Button}:GetPropagateKeyboardInput()$0",
		},
		{
			"trigger": "Button:GetPushedTextOffset\t()",
			"contents": "${1:Button}:GetPushedTextOffset()$0",
		},
		{
			"trigger": "Button:GetPushedTexture\t()",
			"contents": "${1:Button}:GetPushedTexture()$0",
		},
		{
			"trigger": "Button:GetRect\t()",
			"contents": "${1:Button}:GetRect()$0",
		},
		{
			"trigger": "Button:GetRegions\t()",
			"contents": "${1:Button}:GetRegions()$0",
		},
		{
			"trigger": "Button:GetRight\t()",
			"contents": "${1:Button}:GetRight()$0",
		},
		{
			"trigger": "Button:GetScale\t()",
			"contents": "${1:Button}:GetScale()$0",
		},
		{
			"trigger": "Button:GetScript\t(\"scriptType\")",
			"contents": "${1:Button}:GetScript(\"${2:scriptType}\")$0",
		},
		{
			"trigger": "Button:GetSize\t()",
			"contents": "${1:Button}:GetSize()$0",
		},
		{
			"trigger": "Button:GetText\t()",
			"contents": "${1:Button}:GetText()$0",
		},
		{
			"trigger": "Button:GetTextHeight\t()",
			"contents": "${1:Button}:GetTextHeight()$0",
		},
		{
			"trigger": "Button:GetTextWidth\t()",
			"contents": "${1:Button}:GetTextWidth()$0",
		},
		{
			"trigger": "Button:GetTop\t()",
			"contents": "${1:Button}:GetTop()$0",
		},
		{
			"trigger": "Button:GetWidth\t()",
			"contents": "${1:Button}:GetWidth()$0",
		},
		{
			"trigger": "Button:HasScript\t(\"scriptType\")",
			"contents": "${1:Button}:HasScript(\"${2:scriptType}\")$0",
		},
		{
			"trigger": "Button:Hide\t()",
			"contents": "${1:Button}:Hide()$0",
		},
		{
			"trigger": "Button:HookScript\t(\"scriptType\", handler)",
			"contents": "${1:Button}:HookScript(\"${2:scriptType}\", ${3:handler})$0",
		},
		{
			"trigger": "Button:IgnoreDepth\t(enable)",
			"contents": "${1:Button}:IgnoreDepth(${2:enable})$0",
		},
		{
			"trigger": "Button:IsClampedToScreen\t()",
			"contents": "${1:Button}:IsClampedToScreen()$0",
		},
		{
			"trigger": "Button:IsDragging\t()",
			"contents": "${1:Button}:IsDragging()$0",
		},
		{
			"trigger": "Button:IsEnabled\t()",
			"contents": "${1:Button}:IsEnabled()$0",
		},
		{
			"trigger": "Button:IsEventRegistered\t(\"event\")",
			"contents": "${1:Button}:IsEventRegistered(\"${2:event}\")$0",
		},
		{
			"trigger": "Button:IsForbidden\t()",
			"contents": "${1:Button}:IsForbidden()$0",
		},
		{
			"trigger": "Button:IsIgnoringDepth\t()",
			"contents": "${1:Button}:IsIgnoringDepth()$0",
		},
		{
			"trigger": "Button:IsIgnoringParentAlpha\t()",
			"contents": "${1:Button}:IsIgnoringParentAlpha()$0",
		},
		{
			"trigger": "Button:IsIgnoringParentScale\t()",
			"contents": "${1:Button}:IsIgnoringParentScale()$0",
		},
		{
			"trigger": "Button:IsJoystickEnabled\t()",
			"contents": "${1:Button}:IsJoystickEnabled()$0",
		},
		{
			"trigger": "Button:IsKeyboardEnabled\t()",
			"contents": "${1:Button}:IsKeyboardEnabled()$0",
		},
		{
			"trigger": "Button:IsMouseClickEnabled\t()",
			"contents": "${1:Button}:IsMouseClickEnabled()$0",
		},
		{
			"trigger": "Button:IsMouseEnabled\t()",
			"contents": "${1:Button}:IsMouseEnabled()$0",
		},
		{
			"trigger": "Button:IsMouseMotionEnabled\t()",
			"contents": "${1:Button}:IsMouseMotionEnabled()$0",
		},
		{
			"trigger": "Button:IsMouseOver\t([topOffset], [leftOffset], [bottomOffset], [rightOffset])",
			"contents": "${1:Button}:IsMouseOver(${2:[topOffset]}, ${3:[leftOffset]}, ${4:[bottomOffset]}, ${5:[rightOffset]})$0",
		},
		{
			"trigger": "Button:IsMouseWheelEnabled\t()",
			"contents": "${1:Button}:IsMouseWheelEnabled()$0",
		},
		{
			"trigger": "Button:IsMovable\t()",
			"contents": "${1:Button}:IsMovable()$0",
		},
		{
			"trigger": "Button:IsObjectLoaded\t()",
			"contents": "${1:Button}:IsObjectLoaded()$0",
		},
		{
			"trigger": "Button:IsObjectType\t()",
			"contents": "${1:Button}:IsObjectType()$0",
		},
		{
			"trigger": "Button:IsProtected\t()",
			"contents": "${1:Button}:IsProtected()$0",
		},
		{
			"trigger": "Button:IsResizable\t()",
			"contents": "${1:Button}:IsResizable()$0",
		},
		{
			"trigger": "Button:IsShown\t()",
			"contents": "${1:Button}:IsShown()$0",
		},
		{
			"trigger": "Button:IsToplevel\t()",
			"contents": "${1:Button}:IsToplevel()$0",
		},
		{
			"trigger": "Button:IsUserPlaced\t()",
			"contents": "${1:Button}:IsUserPlaced()$0",
		},
		{
			"trigger": "Button:IsVisible\t()",
			"contents": "${1:Button}:IsVisible()$0",
		},
		{
			"trigger": "Button:LockHighlight\t()",
			"contents": "${1:Button}:LockHighlight()$0",
		},
		{
			"trigger": "Button:Lower\t()",
			"contents": "${1:Button}:Lower()$0",
		},
		{
			"trigger": "Button:Raise\t()",
			"contents": "${1:Button}:Raise()$0",
		},
		{
			"trigger": "Button:RegisterAllEvents\t()",
			"contents": "${1:Button}:RegisterAllEvents()$0",
		},
		{
			"trigger": "Button:RegisterEvent\t(\"event\")",
			"contents": "${1:Button}:RegisterEvent(\"${2:event}\")$0",
		},
		{
			"trigger": "Button:RegisterForClicks\t(\"button\", ...)",
			"contents": "${1:Button}:RegisterForClicks(\"${2:button}\", ${3:...})$0",
		},
		{
			"trigger": "Button:RegisterForDrag\t(...)",
			"contents": "${1:Button}:RegisterForDrag(${2:...})$0",
		},
		{
			"trigger": "Button:RegisterUnitEvent\t(\"event\", \"unit\", \"unit2\")",
			"contents": "${1:Button}:RegisterUnitEvent(\"${2:event}\", \"${3:unit1}\", \"${4:unit2}\")$0",
		},
		{
			"trigger": "Button:SetAllPoints\t([frame])",
			"contents": "${1:Button}:SetAllPoints(${2:[frame]})$0",
		},
		{
			"trigger": "Button:SetAlpha\t(alpha)",
			"contents": "${1:Button}:SetAlpha(${2:alpha})$0",
		},
		{
			"trigger": "Button:SetAttribute\t(\"name\", value)",
			"contents": "${1:Button}:SetAttribute(${2:\"name\"}, ${3:value})$0",
		},
		{
			"trigger": "Button:SetBackdrop\t(backdrop)",
			"contents": "${1:Button}:SetBackdrop(${2:backdrop})$0",
		},
		{
			"trigger": "Button:SetBackdropBorderColor\t(red, green, blue, [alpha])",
			"contents": "${1:Button}:SetBackdropBorderColor(${2:red}, ${3:green}, ${4:blue}, ${5:[alpha]})$0",
		},
		{
			"trigger": "Button:SetBackdropColor\t(red, green, blue, [alpha])",
			"contents": "${1:Button}:SetBackdropColor(${2:red}, ${3:green}, ${4:blue}, ${5:[alpha]})$0",
		},
		{
			"trigger": "Button:SetButtonState\t(\"state\", lock)",
			"contents": "${1:Button}:SetButtonState(\"${2:state}\", ${3:lock})$0",
		},
		{
			"trigger": "Button:SetClampedToScreen\t(enable)",
			"contents": "${1:Button}:SetClampedToScreen(${2:enable})$0",
		},
		{
			"trigger": "Button:SetClampRectInsets\t(left, right, top, bottom)",
			"contents": "${1:Button}:SetClampRectInsets(${2:left}, ${3:right}, ${4:top}, ${5:bottom})$0",
		},
		{
			"trigger": "Button:SetClipsChildren\t(enable)",
			"contents": "${1:Button}:SetClipsChildren(${2:enable})$0",
		},
		{
			"trigger": "Button:SetDepth\t(depth)",
			"contents": "${1:Button}:SetDepth(${2:depth})$0",
		},
		{
			"trigger": "Button:SetDisabledAtlas\t(\"atlas\")",
			"contents": "${1:Button}:SetDisabledAtlas(\"${2:atlas}\")$0",
		},
		{
			"trigger": "Button:SetDisabledFontObject\t(font)",
			"contents": "${1:Button}:SetDisabledFontObject(${2:font})$0",
		},
		{
			"trigger": "Button:SetDisabledTexture\t(texture)",
			"contents": "${1:Button}:SetDisabledTexture(${2:texture})$0",
		},
		{
			"trigger": "Button:SetDisabledTexture\t(\"fileName\")",
			"contents": "${1:Button}:SetDisabledTexture(\"${2:fileName}\")$0",
		},
		{
			"trigger": "Button:SetDontSavePosition\t(enable)",
			"contents": "${1:Button}:SetDontSavePosition(${2:enable})$0",
		},
		{
			"trigger": "Button:SetEnabled\t()",
			"contents": "${1:Button}:SetEnabled()$0",
		},
		{
			"trigger": "Button:SetFlattensRenderLayers\t(enable)",
			"contents": "${1:Button}:SetFlattensRenderLayers(${2:enable})$0",
		},
		{
			"trigger": "Button:SetFontString\t(fontString)",
			"contents": "${1:Button}:SetFontString(${2:fontString})$0",
		},
		{
			"trigger": "Button:SetFormattedText\t(\"formatString\", ...)",
			"contents": "${1:Button}:SetFormattedText(\"${2:formatString}\", ${3:...})$0",
		},
		{
			"trigger": "Button:SetFrameLevel\t(level)",
			"contents": "${1:Button}:SetFrameLevel(${2:level})$0",
		},
		{
			"trigger": "Button:SetFrameStrata\t(\"strata\")",
			"contents": "${1:Button}:SetFrameStrata(\"${2:strata}\")$0",
		},
		{
			"trigger": "Button:SetHeight\t(height)",
			"contents": "${1:Button}:SetHeight(${2:height})$0",
		},
		{
			"trigger": "Button:SetHighlightAtlas\t(\"atlas\")",
			"contents": "${1:Button}:SetHighlightAtlas(\"${2:atlas}\")$0",
		},
		{
			"trigger": "Button:SetHighlightFontObject\t(font)",
			"contents": "${1:Button}:SetHighlightFontObject(${2:font})$0",
		},
		{
			"trigger": "Button:SetHighlightTexture\t(texture, \"blendMode\")",
			"contents": "${1:Button}:SetHighlightTexture(${2:texture}, ${3:\"blendMode\"})$0",
		},
		{
			"trigger": "Button:SetHighlightTexture\t(\"filename\", \"blendMode\")",
			"contents": "${1:Button}:SetHighlightTexture(\"${2:filename}\", ${3:\"blendMode\"})$0",
		},
		{
			"trigger": "Button:SetHitRectInsets\t(left, right, top, bottom)",
			"contents": "${1:Button}:SetHitRectInsets(${2:left}, ${3:right}, ${4:top}, ${5:bottom})$0",
		},
		{
			"trigger": "Button:SetHyperlinksEnabled\t(enable)",
			"contents": "${1:Button}:SetHyperlinksEnabled(${2:enable})$0",
		},
		{
			"trigger": "Button:SetID\t(id)",
			"contents": "${1:Button}:SetID(${2:id})$0",
		},
		{
			"trigger": "Button:SetIgnoreParentAlpha\t(enable)",
			"contents": "${1:Button}:SetIgnoreParentAlpha(${2:enable})$0",
		},
		{
			"trigger": "Button:SetIgnoreParentScale\t(enable)",
			"contents": "${1:Button}:SetIgnoreParentScale(${2:enable})$0",
		},
		{
			"trigger": "Button:SetMaxResize\t(maxWidth, maxHeight)",
			"contents": "${1:Button}:SetMaxResize(${2:maxWidth}, ${3:maxHeight})$0",
		},
		{
			"trigger": "Button:SetMinResize\t(minWidth, minHeight)",
			"contents": "${1:Button}:SetMinResize(${2:minWidth}, ${3:minHeight})$0",
		},
		{
			"trigger": "Button:SetMotionScriptsWhileDisabled\t(enable)",
			"contents": "${1:Button}:SetMotionScriptsWhileDisabled(${2:enable})$0",
		},
		{
			"trigger": "Button:SetMouseClickEnabled\t(enable)",
			"contents": "${1:Button}:SetMouseClickEnabled(${2:enable})$0",
		},
		{
			"trigger": "Button:SetMouseMotionEnabled\t(enable)",
			"contents": "${1:Button}:SetMouseMotionEnabled(${2:enable})$0",
		},
		{
			"trigger": "Button:SetMovable\t(enable)",
			"contents": "${1:Button}:SetMovable(${2:enable})$0",
		},
		{
			"trigger": "Button:SetNormalAtlas\t(\"atlas\")",
			"contents": "${1:Button}:SetNormalAtlas(\"${2:atlas}\")$0",
		},
		{
			"trigger": "Button:SetNormalFontObject\t(font)",
			"contents": "${1:Button}:SetNormalFontObject(${2:font})$0",
		},
		{
			"trigger": "Button:SetNormalTexture\t(texture)",
			"contents": "${1:Button}:SetNormalTexture(${2:texture})$0",
		},
		{
			"trigger": "Button:SetNormalTexture\t(\"filename\")",
			"contents": "${1:Button}:SetNormalTexture(\"${2:filename}\")$0",
		},
		{
			"trigger": "Button:SetParent\t(frame)",
			"contents": "${1:Button}:SetParent(${2:frame})$0",
		},
		{
			"trigger": "Button:SetPoint\t(\"point\", [relativeTo], [\"relativePoint\"], [xOffset], [yOffset])",
			"contents": "${1:Button}:SetPoint(\"${2:point}\", ${3:[relativeTo]}, \"${4:[relativePoint]}\", ${5:[xOffset]}, ${6:[yOffset]})$0",
		},
		{
			"trigger": "Button:SetPropagateKeyboardInput\t(enable)",
			"contents": "${1:Button}:SetPropagateKeyboardInput(${2:enable})$0",
		},
		{
			"trigger": "Button:SetPushedAtlas\t(\"atlas\")",
			"contents": "${1:Button}:SetPushedAtlas(\"${2:atlas}\")$0",
		},
		{
			"trigger": "Button:SetPushedTextOffset\t(x, y)",
			"contents": "${1:Button}:SetPushedTextOffset(${2:x}, ${3:y})$0",
		},
		{
			"trigger": "Button:SetPushedTexture\t(texture)",
			"contents": "${1:Button}:SetPushedTexture(${2:texture})$0",
		},
		{
			"trigger": "Button:SetPushedTexture\t(\"filename\")",
			"contents": "${1:Button}:SetPushedTexture(\"${2:filename}\")$0",
		},
		{
			"trigger": "Button:SetResizable\t(enable)",
			"contents": "${1:Button}:SetResizable(${2:enable})$0",
		},
		{
			"trigger": "Button:SetScale\t(scale)",
			"contents": "${1:Button}:SetScale(${2:scale})$0",
		},
		{
			"trigger": "Button:SetScript\t(\"scriptType\", handler)",
			"contents": "${1:Button}:SetScript(\"${2:scriptType}\", ${3:handler})$0",
		},
		{
			"trigger": "Button:SetShown\t(enable)",
			"contents": "${1:Button}:SetShown(${2:enable})$0",
		},
		{
			"trigger": "Button:SetSize\t(width, height)",
			"contents": "${1:Button}:SetSize(${2:width}, ${3:height})$0",
		},
		{
			"trigger": "Button:SetText\t(\"text\")",
			"contents": "${1:Button}:SetText(\"${2:text}\")$0",
		},
		{
			"trigger": "Button:SetToplevel\t(enable)",
			"contents": "${1:Button}:SetToplevel(${2:enable})$0",
		},
		{
			"trigger": "Button:SetUserPlaced\t(enable)",
			"contents": "${1:Button}:SetUserPlaced(${2:enable})$0",
		},
		{
			"trigger": "Button:SetWidth\t(width)",
			"contents": "${1:Button}:SetWidth(${2:width})$0",
		},
		{
			"trigger": "Button:Show\t()",
			"contents": "${1:Button}:Show()$0",
		},
		{
			"trigger": "Button:StartMoving\t()",
			"contents": "${1:Button}:StartMoving()$0",
		},
		{
			"trigger": "Button:StartSizing\t()",
			"contents": "${1:Button}:StartSizing()$0",
		},
		{
			"trigger": "Button:StopAnimating\t()",
			"contents": "${1:Button}:StopAnimating()$0",
		},
		{
			"trigger": "Button:StopMovingOrSizing\t()",
			"contents": "${1:Button}:StopMovingOrSizing()$0",
		},
		{
			"trigger": "Button:UnlockHighlight\t()",
			"contents": "${1:Button}:UnlockHighlight()$0",
		},
		{
			"trigger": "Button:UnregisterAllEvents\t()",
			"contents": "${1:Button}:UnregisterAllEvents()$0",
		},
		{
			"trigger": "Button:UnregisterEvent\t(\"event\")",
			"contents": "${1:Button}:UnregisterEvent(\"${2:event}\")$0",
		},




		{
			"trigger": "_Button:CanChangeAttribute\t()",
			"contents": "${1:enabled} = ${2:Button}:CanChangeAttribute()$0",
		},
		{
			"trigger": "_Button:CanChangeProtectedState\t()",
			"contents": "${1:canChange} = ${2:Button}:CanChangeProtectedState()$0",
		},
		{
			"trigger": "_Button:CreateFontString\t([\"name\"], [\"layer\"], [\"inherits\"])",
			"contents": "${1:fontstring} = ${2:Button}:CreateFontString(${3:[\"name\"]}, ${4:[\"layer\"]}, ${5:[\"inherits\"]})$0",
		},
		{
			"trigger": "_Button:CreateLine\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:texture} = ${2:Button}:CreateLine(${3:[\"name\"]}, \"${4:[layer]}\", ${5:[\"inherits\"]}, ${6:[sublevel]})$0",
		},
		{
			"trigger": "_Button:CreateMaskTexture\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:texture} = ${2:Button}:CreateMaskTexture(${3:[\"name\"]}, \"${4:[layer]}\", ${5:[\"inherits\"]}, ${6:[sublevel]})$0",
		},
		{
			"trigger": "_Button:CreateTexture\t([\"name\"], [\"layer\"], [\"inherits\"], [sublevel])",
			"contents": "${1:texture} = ${2:Button}:CreateTexture(${3:[\"name\"]}, \"${4:[layer]}\", ${5:[\"inherits\"]}, ${6:[sublevel]})$0",
		},
		{
			"trigger": "_Button:DoesClipChildren\t()",
			"contents": "${1:doesClip} = ${2:Button}:DoesClipChildren()$0",
		},
		{
			"trigger": "_Button:GetAlpha\t()",
			"contents": "${1:alpha} = ${2:Button}:GetAlpha()$0",
		},
		{
			"trigger": "_Button:GetAnimationGroups\t()",
			"contents": "${1:...} = ${2:Button}:GetAnimationGroups()$0",
		},
		{
			"trigger": "_Button:GetAttribute\t(\"name\")",
			"contents": "${1:value} = ${2:Button}:GetAttribute(${3:\"name\"})$0",
		},
		{
			"trigger": "_Button:GetBackdrop\t()",
			"contents": "${1:backdrop} = ${2:Button}:GetBackdrop()$0",
		},
		{
			"trigger": "_Button:GetBackdropBorderColor\t()",
			"contents": "${1:red}, ${2:green}, ${3:blue}, ${4:alpha} = ${5:Button}:GetBackdropBorderColor()$0",
		},
		{
			"trigger": "_Button:GetBackdropColor\t()",
			"contents": "${1:red}, ${2:green}, ${3:blue}, ${4:alpha} = ${5:Button}:GetBackdropColor()$0",
		},
		{
			"trigger": "_Button:GetBottom\t()",
			"contents": "${1:bottom} = ${2:Button}:GetBottom()$0",
		},
		{
			"trigger": "_Button:GetBoundsRect\t()",
			"contents": "${1:left}, ${2:bottom}, ${3:width}, ${4:height} = ${5:Button}:GetBoundsRect()$0",
		},
		{
			"trigger": "_Button:GetButtonState\t()",
			"contents": "${1:state} = ${2:Button}:GetButtonState()$0",
		},
		{
			"trigger": "_Button:GetCenter\t()",
			"contents": "${1:x}, ${2:y} = ${3:Button}:GetCenter()$0",
		},
		{
			"trigger": "_Button:GetChildren\t()",
			"contents": "${1:...} = ${2:Button}:GetChildren()$0",
		},
		{
			"trigger": "_Button:GetClampRectInsets\t()",
			"contents": "${1:left}, ${2:right}, ${3:top}, ${4:bottom} = ${5:Button}:GetClampRectInsets()$0",
		},
		{
			"trigger": "_Button:GetDebugName\t()",
			"contents": "${1:name} = ${2:Button}:GetDebugName()$0",
		},
		{
			"trigger": "_Button:GetDepth\t()",
			"contents": "${1:depth} = ${2:Button}:GetDepth()$0",
		},
		{
			"trigger": "_Button:GetDisabledFontObject\t()",
			"contents": "${1:font} = ${2:Button}:GetDisabledFontObject()$0",
		},
		{
			"trigger": "_Button:GetDisabledTexture\t()",
			"contents": "${1:texture} = ${2:Button}:GetDisabledTexture()$0",
		},
		{
			"trigger": "_Button:GetDontSavePosition\t()",
			"contents": "${1:saved} = ${2:Button}:GetDontSavePosition()$0",
		},
		{
			"trigger": "_Button:GetEffectiveAlpha\t()",
			"contents": "${1:alpha} = ${2:Button}:GetEffectiveAlpha()$0",
		},
		{
			"trigger": "_Button:GetEffectiveDepth\t()",
			"contents": "${1:depth} = ${2:Button}:GetEffectiveDepth()$0",
		},
		{
			"trigger": "_Button:GetEffectivelyFlattensRenderLayers\t()",
			"contents": "${1:doesFlattens} = ${2:Button}:GetEffectivelyFlattensRenderLayers()$0",
		},
		{
			"trigger": "_Button:GetEffectiveScale\t()",
			"contents": "${1:scale} = ${2:Button}:GetEffectiveScale()$0",
		},
		{
			"trigger": "_Button:GetFlattensRenderLayers\t()",
			"contents": "${1:doesFlattens} = ${2:Button}:GetFlattensRenderLayers()$0",
		},
		{
			"trigger": "_Button:GetFontString\t()",
			"contents": "${1:fontstring} = ${2:Button}:GetFontString()$0",
		},
		{
			"trigger": "_Button:GetFrameLevel\t()",
			"contents": "${1:level} = ${2:Button}:GetFrameLevel()$0",
		},
		{
			"trigger": "_Button:GetFrameStrata\t()",
			"contents": "${1:strata} = ${2:Button}:GetFrameStrata()$0",
		},
		{
			"trigger": "_Button:GetHeight\t()",
			"contents": "${1:height} = ${2:Button}:GetHeight()$0",
		},
		{
			"trigger": "_Button:GetHighlightFontObject\t()",
			"contents": "${1:font} = ${2:Button}:GetHighlightFontObject()$0",
		},
		{
			"trigger": "_Button:GetHighlightTexture\t()",
			"contents": "${1:texture} = ${2:Button}:GetHighlightTexture()$0",
		},
		{
			"trigger": "_Button:GetHitRectInsets\t()",
			"contents": "${1:left}, ${2:right}, ${3:top}, ${4:bottom} = ${5:Button}:GetHitRectInsets()$0",
		},
		{
			"trigger": "_Button:GetHyperlinksEnabled\t()",
			"contents": "${1:enabled} = ${2:Button}:GetHyperlinksEnabled()$0",
		},
		{
			"trigger": "_Button:GetID\t()",
			"contents": "${1:id} = ${2:Button}:GetID()$0",
		},
		{
			"trigger": "_Button:GetLeft\t()",
			"contents": "${1:left} = ${2:Button}:GetLeft()$0",
		},
		{
			"trigger": "_Button:GetMaxResize\t()",
			"contents": "${1:maxWidth}, ${2:maxHeight} = ${3:Button}:GetMaxResize()$0",
		},
		{
			"trigger": "_Button:GetMinResize\t()",
			"contents": "${1:minWidth}, ${2:minHeight} = ${3:Button}:GetMinResize()$0",
		},
		{
			"trigger": "_Button:GetMotionScriptsWhileDisabled\t()",
			"contents": "${1:enabled} = ${2:Button}:GetMotionScriptsWhileDisabled()$0",
		},
		{
			"trigger": "_Button:GetName\t()",
			"contents": "${1:name} = ${2:Button}:GetName()$0",
		},
		{
			"trigger": "_Button:GetNormalFontObject\t()",
			"contents": "${1:font} = ${2:Button}:GetNormalFontObject()$0",
		},
		{
			"trigger": "_Button:GetNormalTexture\t()",
			"contents": "${1:texture} = ${2:Button}:GetNormalTexture()$0",
		},
		{
			"trigger": "_Button:GetNumChildren\t()",
			"contents": "${1:numChildren} = ${2:Button}:GetNumChildren()$0",
		},
		{
			"trigger": "_Button:GetNumPoints\t()",
			"contents": "${1:numPoints} = ${2:Button}:GetNumPoints()$0",
		},
		{
			"trigger": "_Button:GetNumRegions\t()",
			"contents": "${1:numRegions} = ${2:Button}:GetNumRegions()$0",
		},
		{
			"trigger": "_Button:GetObjectType\t()",
			"contents": "${1:type} = ${2:Button}:GetObjectType()$0",
		},
		{
			"trigger": "_Button:GetPoint\t(index)",
			"contents": "${1:point}, ${2:relativeTo}, ${3:relativePoint}, ${4:xOffset}, ${5:yOffset} = ${6:Button}:GetPoint(${7:index})$0",
		},
		{
			"trigger": "_Button:GetPropagateKeyboardInput\t()",
			"contents": "${1:propagate} = ${2:Button}:GetPropagateKeyboardInput()$0",
		},
		{
			"trigger": "_Button:GetPushedTextOffset\t()",
			"contents": "${1:x}, ${2:y} = ${3:Button}:GetPushedTextOffset()$0",
		},
		{
			"trigger": "_Button:GetPushedTexture\t()",
			"contents": "${1:texture} = ${2:Button}:GetPushedTexture()$0",
		},
		{
			"trigger": "_Button:GetRect\t()",
			"contents": "${1:left}, ${2:bottom}, ${3:width}, ${4:height} = ${5:Button}:GetRect()$0",
		},
		{
			"trigger": "_Button:GetRegions\t()",
			"contents": "${1:...} = ${2:Button}:GetRegions()$0",
		},
		{
			"trigger": "_Button:GetRight\t()",
			"contents": "${1:right} = ${2:Button}:GetRight()$0",
		},
		{
			"trigger": "_Button:GetScale\t()",
			"contents": "${1:scale} = ${2:Button}:GetScale()$0",
		},
		{
			"trigger": "_Button:GetScript\t(\"scriptType\")",
			"contents": "${1:handler} = ${2:Button}:GetScript(\"${3:scriptType}\")$0",
		},
		{
			"trigger": "_Button:GetSize\t()",
			"contents": "${1:width}, ${2:height} = ${3:Button}:GetSize()$0",
		},
		{
			"trigger": "_Button:GetText\t()",
			"contents": "${1:text} = ${1:Button}:GetText()$0",
		},
		{
			"trigger": "_Button:GetTextHeight\t()",
			"contents": "${1:height} = ${1:Button}:GetTextHeight()$0",
		},
		{
			"trigger": "_Button:GetTextWidth\t()",
			"contents": "${1:width} = ${1:Button}:GetTextWidth()$0",
		},
		{
			"trigger": "_Button:GetTop\t()",
			"contents": "${1:top} = ${2:Button}:GetTop()$0",
		},
		{
			"trigger": "_Button:GetWidth\t()",
			"contents": "${1:width} = ${2:Button}:GetWidth()$0",
		},
		{
			"trigger": "_Button:HasScript\t(\"scriptType\")",
			"contents": "${1:hasScript} = ${2:Button}:HasScript(\"${3:scriptType}\")$0",
		},
		{
			"trigger": "_Button:IsClampedToScreen\t()",
			"contents": "${1:enabled} = ${2:Button}:IsClampedToScreen()$0",
		},
		{
			"trigger": "_Button:IsDragging\t()",
			"contents": "${1:isDragging} = ${2:Button}:IsDragging()$0",
		},
		{
			"trigger": "_Button:IsEnabled\t()",
			"contents": "${1:enabled} = ${1:Button}:IsEnabled()$0",
		},
		{
			"trigger": "_Button:IsEventRegistered\t(\"event\")",
			"contents": "${1:registered} = ${2:Button}:IsEventRegistered(\"${3:event}\")$0",
		},
		{
			"trigger": "_Button:IsForbidden\t()",
			"contents": "${1:isForbidden} = ${2:Button}:IsForbidden()$0",
		},
		{
			"trigger": "_Button:IsIgnoringDepth\t()",
			"contents": "${1:enabled} = ${2:Button}:IsIgnoringDepth()$0",
		},
		{
			"trigger": "_Button:IsIgnoringParentAlpha\t()",
			"contents": "${1:isIgnoring} = ${2:Button}:IsIgnoringParentAlpha()$0",
		},
		{
			"trigger": "_Button:IsIgnoringParentScale\t()",
			"contents": "${1:isIgnoring} = ${2:Button}:IsIgnoringParentScale()$0",
		},
		{
			"trigger": "_Button:IsJoystickEnabled\t()",
			"contents": "${1:enabled} = ${2:Button}:IsJoystickEnabled()$0",
		},
		{
			"trigger": "_Button:IsKeyboardEnabled\t()",
			"contents": "${1:enabled} = ${2:Button}:IsKeyboardEnabled()$0",
		},
		{
			"trigger": "_Button:IsMouseClickEnabled\t()",
			"contents": "${1:enabled} = ${2:Button}:IsMouseClickEnabled()$0",
		},
		{
			"trigger": "_Button:IsMouseEnabled\t()",
			"contents": "${1:enabled} = ${2:Button}:IsMouseEnabled()$0",
		},
		{
			"trigger": "_Button:IsMouseMotionEnabled\t()",
			"contents": "${1:enabled} = ${2:Button}:IsMouseMotionEnabled()$0",
		},
		{
			"trigger": "_Button:IsMouseOver\t([topOffset], [leftOffset], [bottomOffset], [rightOffset])",
			"contents": "${1:isOver} = ${2:Button}:IsMouseOver(${3:[topOffset]}, ${4:[leftOffset]}, ${5:[bottomOffset]}, ${6:[rightOffset]})$0",
		},
		{
			"trigger": "_Button:IsMouseWheelEnabled\t()",
			"contents": "${1:enabled} = ${2:Button}:IsMouseWheelEnabled()$0",
		},
		{
			"trigger": "_Button:IsMovable\t()",
			"contents": "${1:movable} = ${2:Button}:IsMovable()$0",
		},
		{
			"trigger": "_Button:IsObjectLoaded\t()",
			"contents": "${1:loaded} = ${2:Button}:IsObjectLoaded()$0",
		},
		{
			"trigger": "_Button:IsObjectType\t(\"type\")",
			"contents": "${1:isType} = ${2:Button}:IsObjectType(\"${3:type}\")$0",
		},
		{
			"trigger": "_Button:IsProtected\t()",
			"contents": "${1:isProtected}, ${2:explicit} = ${3:Button}:IsProtected()$0",
		},
		{
			"trigger": "_Button:IsResizable\t()",
			"contents": "${1:enabled} = ${2:Button}:IsResizable()$0",
		},
		{
			"trigger": "_Button:IsShown\t()",
			"contents": "${1:shown} = ${2:Button}:IsShown()$0",
		},
		{
			"trigger": "_Button:IsToplevel\t()",
			"contents": "${1:enabled} = ${2:Button}:IsToplevel()$0",
		},
		{
			"trigger": "_Button:IsUserPlaced\t()",
			"contents": "${1:enabled} = ${2:Button}:IsUserPlaced()$0",
		},
		{
			"trigger": "_Button:IsVisible\t()",
			"contents": "${1:visible} = ${2:Button}:IsVisible()$0",
		},




		{
			"trigger": "_Button\thelp",
			"contents": "Button = {\n\tinherits = {\n\t\t\"Button\",\n\t\t\"Frame\",\n\t\t\"ScriptObject\",\n\t\t\"VisibleRegion\",\n\t\t\"Region\",\n\t\t\"ParentedObject\",\n\t\t\"UIObject\",\n\t},\n\thandlers = {\n\t\t[\"OnAttributeChanged\"] = \"self, name, value\", -- Run when a frame attribute is changed\n\t\t[\"OnChar\"] = \"self, text\", -- Run for each text character typed in the frame\n\t\t[\"OnClick\"] = \"self, button, down\", -- Run when the button is clicked\n\t\t[\"OnDisable\"] = \"self\", -- Run when the frame is disabled\n\t\t[\"OnDoubleClick\"] = \"self, button\", -- Run when the button is double-clicked\n\t\t[\"OnDragStart\"] = \"self, button\", -- Run when the mouse is dragged starting in the frame\n\t\t[\"OnDragStop\"] = \"self\", -- Run when the mouse button is released after a drag started in the frame\n\t\t[\"OnEnable\"] = \"self\", -- Run when the frame is enabled\n\t\t[\"OnEnter\"] = \"self, motion\", -- Run when the mouse cursor enters the frame's interactive area\n\t\t[\"OnEvent\"] = \"self, event, ...\", -- Run whenever an event fires for which the frame is registered\n\t\t[\"OnHide\"] = \"self\", -- Run when the frame's visbility changes to hidden\n\t\t[\"OnHyperlinkClick\"] = \"self, link, text, button, region, left, bottom, width, height\", -- Run when a mouse button is pressed while the cursor is over the hyperlink\n\t\t[\"OnHyperlinkEnter\"] = \"self, link, text, region, left, bottom, width, height\", -- Run when the mouse cursor enters the hyperlink's interactive area\n\t\t[\"OnHyperlinkLeave\"] = \"self\", -- Run when the mouse cursor leaves the hyperlink's interactive area\n\t\t[\"OnKeyDown\"] = \"self, key\", -- Run when a keyboard key is pressed if the frame is keyboard enabled\n\t\t[\"OnKeyUp\"] = \"self, key\", -- Run when a keyboard key is released if the frame is keyboard enabled\n\t\t[\"OnLeave\"] = \"self, motion\", -- Run when the mouse cursor leaves the frame's interactive area\n\t\t[\"OnLoad\"] = \"self\", -- Run when the frame is created\n\t\t[\"OnMouseDown\"] = \"self, button\", -- Run when a mouse button is pressed while the cursor is over the frame\n\t\t[\"OnMouseUp\"] = \"self, button, upInside\", -- Run when the mouse button is released following a mouse down action in the frame\n\t\t[\"OnMouseWheel\"] = \"self, delta\", -- Run when the frame receives a mouse wheel scrolling action\n\t\t[\"OnReceiveDrag\"] = \"self\", -- Run when the mouse button is released after dragging into the frame\n\t\t[\"OnShow\"] = \"self\", -- Run when the frame becomes visible\n\t\t[\"OnSizeChanged\"] = \"self, width, height\", -- Run when a frame's size changes\n\t\t[\"OnUpdate\"] = \"self, elapsed\", -- Run each time the screen is drawn by the game engine\n\t\t[\"PostClick\"] = \"self, button, down\", -- Run immediately following the button's OnClick handler with the same arguments\n\t\t[\"PreClick\"] = \"self, button, down\", -- Run immediately before the button's OnClick handler with the same arguments\n\t},\n\tmethods = {\n\t\t\"CanChangeAttribute\", -- Returns whether secure frame attributes can currently be changed\n\t\t\"CanChangeProtectedState\", -- Returns whether protected properties of the region can be changed by non-secure scripts\n\t\t\"ClearAllPoints\", -- Removes all anchor points from the region\n\t\t\"Click\", -- Performs a (virtual) mouse click on the button\n\t\t\"CreateAnimationGroup\", -- Creates a new animation group as a child of the region\n\t\t\"CreateFontString\", -- Creates a new font string object as a child of the frame\n\t\t\"CreateLine\", -- Creates a new line object as a child of the frame\n\t\t\"CreateMaskTexture\", -- Creates a new mask texture object as a child of the frame\n\t\t\"CreateTexture\", -- Creates a new texture object as a child of the frame\n\t\t\"Disable\", -- Disallows user interaction with the button\n\t\t\"DisableDrawLayer\", -- Prevents display of all child objects of the frame on a specified graphics layer\n\t\t\"DoesClipChildren\", -- Returns whether the frame's childrens are clipped off when exceeding the it's boundaries\n\t\t\"Enable\", -- Allows user interaction with the button\n\t\t\"EnableDrawLayer\", -- Allows display of all child objects of the frame on a specified graphics layer\n\t\t\"EnableJoystick\", -- Enables or disables joystick interactivity for the frame\n\t\t\"EnableKeyboard\", -- Enables or disables keyboard interactivity for the frame\n\t\t\"EnableMouse\", -- Enables or disables mouse interactivity for the frame\n\t\t\"EnableMouseWheel\", -- Enables or disables mouse wheel interactivity for the frame\n\t\t\"GetAlpha\", -- Returns the opacity of the region relative to it's parent\n\t\t\"GetAnimationGroups\", -- Returns a list of animation groups belonging to the region\n\t\t\"GetAttribute\", -- Returns the value of a secure frame attribute\n\t\t\"GetBackdrop\", -- Returns information about the frame's backdrop graphic\n\t\t\"GetBackdropBorderColor\", -- Returns the shading color for the frame's border graphic\n\t\t\"GetBackdropColor\", -- Returns the shading color for the frame's background graphic\n\t\t\"GetBottom\", -- Returns the distance from the bottom of the screen to the bottom of the region\n\t\t\"GetBoundsRect\", -- Returns the position and dimension of the smallest area enclosing the frame and it's childrens\n\t\t\"GetButtonState\", -- Returns the button's current state\n\t\t\"GetCenter\", -- Returns the screen coordinates of the region's center\n\t\t\"GetChildren\", -- Returns a list of child frames of the frame\n\t\t\"GetClampRectInsets\", -- Returns offsets from the frame's edges used when limiting user movement or resizing of the frame\n\t\t\"GetDebugName\", -- Returns the widget object's debug name\n\t\t\"GetDepth\", -- Returns the 3D depth of the frame\n\t\t\"GetDisabledFontObject\", -- Returns the font object used for the button's disabled state\n\t\t\"GetDisabledTexture\", -- Returns the texture used when the button is disabled\n\t\t\"GetDontSavePosition\", -- Returns whether the position is included for the automatic saving and restoration\n\t\t\"GetEffectiveAlpha\", -- Returns the overall opacity of the frame\n\t\t\"GetEffectiveDepth\", -- Returns the overall 3D depth of the frame\n\t\t\"GetEffectivelyFlattensRenderLayers\", -- Returns whether the frame's childrens are effectively rendered at the same layer level\n\t\t\"GetEffectiveScale\", -- Returns the overall scale factor of the frame\n\t\t\"GetFlattensRenderLayers\", -- Returns whether the frame's childrens are rendered at the same layer level\n\t\t\"GetFontString\", -- Returns the fontstring object used for the button's label text\n\t\t\"GetFrameLevel\", -- Returns the level at which the frame is layered relative to others in its strata\n\t\t\"GetFrameStrata\", -- Returns the general layering strata of the frame\n\t\t\"GetHeight\", -- Returns the height of the region\n\t\t\"GetHighlightFontObject\", -- Returns the font object used when the button is highlighted\n\t\t\"GetHighlightTexture\", -- Returns the texture used when the button is highlighted\n\t\t\"GetHitRectInsets\", -- Returns the insets from the frame's edges which determine its mouse-interactable area\n\t\t\"GetHyperlinksEnabled\", -- Returns whether hyperlinks in the frame's text are interactive\n\t\t\"GetID\", -- Returns the frame's numeric identifier\n\t\t\"GetLeft\", -- Returns the distance from the left edge of the screen to the left edge of the region\n\t\t\"GetMaxResize\", -- Returns the maximum size of the frame for user resizing\n\t\t\"GetMinResize\", -- Returns the minimum size of the frame for user resizing\n\t\t\"GetMotionScriptsWhileDisabled\", -- Determines whether [OnEnter|OnLeave] scripts will fire while the button is disabled\n\t\t\"GetName\", -- Returns the widget object's name\n\t\t\"GetNormalFontObject\", -- Returns the font object used for the button's normal state\n\t\t\"GetNormalTexture\", -- Returns the texture used for the button's normal state\n\t\t\"GetNumChildren\", -- Returns the number of child frames belonging to the frame\n\t\t\"GetNumPoints\", -- Returns the number of anchor points defined for the region\n\t\t\"GetNumRegions\", -- Returns the number of non-frame child regions belonging to the frame\n\t\t\"GetObjectType\", -- Returns the object's widget type\n\t\t\"GetParent\", -- Returns the object's parent object\n\t\t\"GetPoint\", -- Returns information about one of the region's anchor points\n\t\t\"GetPropagateKeyboardInput\", -- Returns whether the frame propagates keyboard events\n\t\t\"GetPushedTextOffset\", -- Returns the offset for moving the button's label text when pushed\n\t\t\"GetPushedTexture\", -- Returns the texture used when the button is pushed\n\t\t\"GetRect\", -- Returns the position and dimensions of the region\n\t\t\"GetRegions\", -- Returns a list of non-frame child regions belonging to the frame\n\t\t\"GetRight\", -- Returns the distance from the left edge of the screen to the right edge of the region\n\t\t\"GetScale\", -- Returns the frame's scale factor\n\t\t\"GetScript\", -- Returns the widget's handler function for a script\n\t\t\"GetSize\", -- Returns the width and height of the region\n\t\t\"GetText\", -- Returns the text of the button's label\n\t\t\"GetTextHeight\", -- Returns the height of the button's text label\n\t\t\"GetTextWidth\", -- Returns the width of the button's text label\n\t\t\"GetTop\", -- Returns the distance from the bottom of the screen to the top of the region\n\t\t\"GetWidth\", -- Returns the width of the region\n\t\t\"HasScript\", -- Returns whether the widget supports a script handler\n\t\t\"Hide\", -- Hides the region\n\t\t\"HookScript\", -- Securely hooks a script handler\n\t\t\"IgnoreDepth\", -- Sets whether the frame's 3D depth property is ignored\n\t\t\"IsClampedToScreen\", -- Returns whether the frame's boundaries are limited to those of the screen\n\t\t\"IsDragging\", -- Returns whether the region is currently being dragged\n\t\t\"IsEnabled\", -- Returns whether user interaction with the button is allowed\n\t\t\"IsEventRegistered\", -- Returns whether the frame is registered for a given event\n\t\t\"IsForbidden\", -- Returns if this widget's methods may only be called from secure execution paths\n\t\t\"IsIgnoringDepth\", -- Returns whether the frame's depth property is ignored\n\t\t\"IsIgnoringParentAlpha\", -- Returns if the region is ignoring it's parent alpha changes\n\t\t\"IsIgnoringParentScale\", -- Returns if the region is ignoring it's parent scale changes\n\t\t\"IsJoystickEnabled\", -- Returns whether joystick interactivity is enabled for the frame\n\t\t\"IsKeyboardEnabled\", -- Returns whether keyboard interactivity is enabled for the frame\n\t\t\"IsMouseClickEnabled\", -- Returns whether mouse click interactivity is enabled for the frame\n\t\t\"IsMouseEnabled\", -- Returns whether mouse interactivity is enabled for the frame\n\t\t\"IsMouseMotionEnabled\", -- Returns whether mouse motion interactivity is enabled for the frame\n\t\t\"IsMouseOver\", -- Returns whether the mouse cursor is over the given region\n\t\t\"IsMouseWheelEnabled\", -- Returns whether mouse wheel interactivity is enabled for the frame\n\t\t\"IsMovable\", -- Returns whether the frame can be moved by the user\n\t\t\"IsObjectLoaded\", -- Returns whether the region is loaded\n\t\t\"IsObjectType\", -- Returns whether the object belongs to a given widget type\n\t\t\"IsProtected\", -- Returns whether the region is protected\n\t\t\"IsResizable\", -- Returns whether the frame can be resized by the user\n\t\t\"IsShown\", -- Returns whether the region is shown\n\t\t\"IsToplevel\", -- Returns whether the frame is automatically raised to the front when clicked\n\t\t\"IsUserPlaced\", -- Returns whether the frame is flagged for automatic saving and restoration of position and dimensions\n\t\t\"IsVisible\", -- Returns whether the region is visible\n\t\t\"LockHighlight\", -- Locks the button in it's highlight state\n\t\t\"Lower\", -- Reduces the frame's frame level below all other frames in its strata\n\t\t\"Raise\", -- Increases the frame's frame level above all other frames in its strata\n\t\t\"RegisterAllEvents\", -- Registers the frame for all events\n\t\t\"RegisterEvent\", -- Registers the frame for an event\n\t\t\"RegisterForClicks\", -- Registers a button to receive mouse clicks\n\t\t\"RegisterForDrag\", -- Registers the frame for dragging\n\t\t\"RegisterUnitEvent\", -- Registers the frame for an event for the specified units\n\t\t\"SetAllPoints\", -- Sets all anchor points of the region to match those of another region\n\t\t\"SetAlpha\", -- Sets the opacity of the region relative to it's parent\n\t\t\"SetAttribute\", -- Sets a secure frame attribute\n\t\t\"SetBackdrop\", -- Sets a backdrop graphic for the frame\n\t\t\"SetBackdropBorderColor\", -- Sets a shading color for the frame's border graphic\n\t\t\"SetBackdropColor\", -- Sets a shading color for the frame's background graphic\n\t\t\"SetButtonState\", -- Sets the button's state\n\t\t\"SetClampedToScreen\", -- Sets offsets from the frame's edges used when limiting user movement or resizing of the frame\n\t\t\"SetClampRectInsets\", -- Sets whether the frame's boundaries should be limited to those of the screen\n\t\t\"SetClipsChildren\", -- Sets whether the frame's childrens are clipped off when exceeding the it's boundaries\n\t\t\"SetDepth\", -- Sets the 3D depth of the frame\n\t\t\"SetDisabledAtlas\", -- Sets the atlas used when the button is disabled\n\t\t\"SetDisabledFontObject\", -- Sets the font object used for the button's disabled state\n\t\t\"SetDisabledTexture\", -- Sets the texture used when the button is disabled\n\t\t\"SetDontSavePosition\", -- Set whether the position are included for the automatic saving and restoration\n\t\t\"SetEnabled\", -- Enables or disables the widget, allowing or preventing user interaction\n\t\t\"SetFlattensRenderLayers\", -- Sets the frame's childrens to be rendered at the same layer level\n\t\t\"SetFontString\", -- Sets the fontstring object used for the button's label text\n\t\t\"SetFormattedText\", -- Sets the button's label text using format specifiers\n\t\t\"SetFrameLevel\", -- Sets the level at which the frame is layered relative to others in its strata\n\t\t\"SetFrameStrata\", -- Sets the general layering strata of the frame\n\t\t\"SetHeight\", -- Sets the region's height\n\t\t\"SetHighlightAtlas\", -- Sets the atlas used when the button is highlighted\n\t\t\"SetHighlightFontObject\", -- Sets the font object used when the button is highlighted\n\t\t\"SetHighlightTexture\", -- Sets the texture used when the button is highlighted\n\t\t\"SetHitRectInsets\", -- Sets the insets from the frame's edges which determine its mouse-interactable area\n\t\t\"SetHyperlinksEnabled\", -- Sets whether the hyperlinks in the frame's text are interactive\n\t\t\"SetID\", -- Sets a numeric identifier for the frame\n\t\t\"SetIgnoreParentAlpha\", -- Sets if the region should ignore it's parent alpha changes\n\t\t\"SetIgnoreParentScale\", -- Sets if the region should ignore it's parent scale changes\n\t\t\"SetMaxResize\", -- Sets the maximum size of the frame for user resizing\n\t\t\"SetMinResize\", -- Sets the minimum size of the frame for user resizing\n\t\t\"SetMotionScriptsWhileDisabled\", -- Sets whether the button should fire [OnEnter|OnLeave] scripts while disabled\n\t\t\"SetMouseClickEnabled\", -- Sets whether the frame can be clicked by the mouse\n\t\t\"SetMouseMotionEnabled\", -- Sets whether the frame's mouse motion is enabled\n\t\t\"SetMovable\", -- Sets whether the frame can be moved by the user\n\t\t\"SetNormalAtlas\", -- Sets the atlas used for the button's normal state\n\t\t\"SetNormalFontObject\", -- Sets the font object used for the button's normal state\n\t\t\"SetNormalTexture\", -- Sets the texture used for the button's normal state\n\t\t\"SetParent\", -- Sets another frame the parent of this region\n\t\t\"SetPoint\", -- Sets an anchor point for the region\n\t\t\"SetPropagateKeyboardInput\", -- Sets whether the frame propagates the keyboard events\n\t\t\"SetPushedAtlas\", -- Sets the atlas used when the button is pushed\n\t\t\"SetPushedTextOffset\", -- Sets the offset for moving the button's label text when pushed\n\t\t\"SetPushedTexture\", -- Sets the texture used when the button is pushed\n\t\t\"SetResizable\", -- Sets whether the frame can be resized by the user\n\t\t\"SetScale\", -- Sets the frame's scale factor\n\t\t\"SetScript\", -- Sets the widget's handler function for a script\n\t\t\"SetShown\", -- Sets whether the region should be visible or hidden\n\t\t\"SetSize\", -- Sets the size of the region to the specified values\n\t\t\"SetText\", -- Sets the text displayed as the button's label\n\t\t\"SetToplevel\", -- Sets whether the frame should automatically come to the front when clicked\n\t\t\"SetUserPlaced\", -- Sets the frame for automatic saving and restoration of position and dimensions\n\t\t\"SetWidth\", -- Sets the region's width\n\t\t\"Show\", -- Shows the region\n\t\t\"StartMoving\", -- Begins repositioning the frame via mouse movement\n\t\t\"StartSizing\", -- Begins resizing the frame via mouse movement\n\t\t\"StopAnimating\", -- Stops any active animations involving the region or it's children\n\t\t\"StopMovingOrSizing\", -- Ends movement or resizing of the frame initiated with\n\t\t\"UnlockHighlight\", -- Unlocks the button's highlight state\n\t\t\"UnregisterAllEvents\", -- Unregisters the frame from any events for which it is registered\n\t\t\"UnregisterEvent\", -- Unregisters the frame for an event\n\t},\n}",
		},
	]
}
