<snippet>
	<content><![CDATA[ColorSelect = {
	handlers = {
		["OnAttributeChanged"] = "self, name, value", -- Run when a frame attribute is changed
		["OnChar"] = "self, text", -- Run for each text character typed in the frame
		["OnColorSelect"] = "", -- Run when the color select frame's color selection changes
		["OnDisable"] = "self", -- Run when the frame is disabled
		["OnDragStart"] = "self, button", -- Run when the mouse is dragged starting in the frame
		["OnDragStop"] = "self", -- Run when the mouse button is released after a drag started in the frame
		["OnEnable"] = "self", -- Run when the frame is enabled
		["OnEnter"] = "self, motion", -- Run when the mouse cursor enters the frame's interactive area
		["OnEvent"] = "self, event, ...", -- Run whenever an event fires for which the frame is registered
		["OnHide"] = "self", -- Run when the frame's visbility changes to hidden
		["OnHyperlinkClick"] = "self, link, text, button, region, left, bottom, width, height", -- Run when a mouse button is pressed while the cursor is over the hyperlink
		["OnHyperlinkEnter"] = "self, link, text, region, left, bottom, width, height", -- Run when the mouse cursor enters the hyperlink's interactive area
		["OnHyperlinkLeave"] = "self", -- Run when the mouse cursor leaves the hyperlink's interactive area
		["OnKeyDown"] = "self, key", -- Run when a keyboard key is pressed if the frame is keyboard enabled
		["OnKeyUp"] = "self, key", -- Run when a keyboard key is released if the frame is keyboard enabled
		["OnLeave"] = "self, motion", -- Run when the mouse cursor leaves the frame's interactive area
		["OnLoad"] = "self", -- Run when the frame is created
		["OnMouseDown"] = "self, button", -- Run when a mouse button is pressed while the cursor is over the frame
		["OnMouseUp"] = "self, button, upInside", -- Run when the mouse button is released following a mouse down action in the frame
		["OnMouseWheel"] = "self, delta", -- Run when the frame receives a mouse wheel scrolling action
		["OnReceiveDrag"] = "self", -- Run when the mouse button is released after dragging into the frame
		["OnShow"] = "self", -- Run when the frame becomes visible
		["OnSizeChanged"] = "self, width, height", -- Run when a frame's size changes
		["OnUpdate"] = "self, elapsed", -- Run each time the screen is drawn by the game engine
	},
	methods = {
		"CanChangeAttribute", -- Returns whether secure frame attributes can currently be changed
		"CanChangeProtectedState", -- Returns whether protected properties of the region can be changed by non-secure scripts
		"ClearAllPoints", -- Removes all anchor points from the region
		"CreateAnimationGroup", -- Creates a new animation group as a child of the region
		"CreateFontString", -- Creates a new font string object as a child of the frame
		"CreateLine", -- Creates a new line object as a child of the frame
		"CreateMaskTexture", -- Creates a new mask texture object as a child of the frame
		"CreateTexture", -- Creates a new texture object as a child of the frame
		"DisableDrawLayer", -- Prevents display of all child objects of the frame on a specified graphics layer
		"DoesClipChildren", -- Returns whether the frame's childrens are clipped off when exceeding the it's boundaries
		"EnableDrawLayer", -- Allows display of all child objects of the frame on a specified graphics layer
		"EnableJoystick", -- Enables or disables joystick interactivity for the frame
		"EnableKeyboard", -- Enables or disables keyboard interactivity for the frame
		"EnableMouse", -- Enables or disables mouse interactivity for the frame
		"EnableMouseWheel", -- Enables or disables mouse wheel interactivity for the frame
		"GetAlpha", -- Returns the opacity of the region relative to it's parent
		"GetAnimationGroups", -- Returns a list of animation groups belonging to the region
		"GetAttribute", -- Returns the value of a secure frame attribute
		"GetBackdrop", -- Returns information about the frame's backdrop graphic
		"GetBackdropBorderColor", -- Returns the shading color for the frame's border graphic
		"GetBackdropColor", -- Returns the shading color for the frame's background graphic
		"GetBottom", -- Returns the distance from the bottom of the screen to the bottom of the region
		"GetBoundsRect", -- Returns the position and dimension of the smallest area enclosing the frame and it's childrens
		"GetCenter", -- Returns the screen coordinates of the region's center
		"GetChildren", -- Returns a list of child frames of the frame
		"GetClampRectInsets", -- Returns offsets from the frame's edges used when limiting user movement or resizing of the frame
		"GetColorHSV", -- Returns the hue, saturation and value of the currently selected color
		"GetColorRGB", -- Returns the red, green and blue components of the currently selected color
		"GetColorValueTexture", -- Returns the texture for the color picker's value slider background
		"GetColorValueThumbTexture", -- Returns the texture for the color picker's value slider thumb
		"GetColorWheelTexture", -- Returns the texture for the color picker's hue/saturation wheel
		"GetColorWheelThumbTexture", -- Returns the texture for the selection indicator on the color picker's hue/saturation wheel
		"GetDebugName", -- Returns the widget object's debug name
		"GetDepth", -- Returns the 3D depth of the frame
		"GetDontSavePosition", -- Returns whether the position is included for the automatic saving and restoration
		"GetEffectiveAlpha", -- Returns the overall opacity of the frame
		"GetEffectiveDepth", -- Returns the overall 3D depth of the frame
		"GetEffectivelyFlattensRenderLayers", -- Returns whether the frame's childrens are effectively rendered at the same layer level
		"GetEffectiveScale", -- Returns the overall scale factor of the frame
		"GetFlattensRenderLayers", -- Returns whether the frame's childrens are rendered at the same layer level
		"GetFrameLevel", -- Returns the level at which the frame is layered relative to others in its strata
		"GetFrameStrata", -- Returns the general layering strata of the frame
		"GetHeight", -- Returns the height of the region
		"GetHitRectInsets", -- Returns the insets from the frame's edges which determine its mouse-interactable area
		"GetHyperlinksEnabled", -- Returns whether hyperlinks in the frame's text are interactive
		"GetID", -- Returns the frame's numeric identifier
		"GetLeft", -- Returns the distance from the left edge of the screen to the left edge of the region
		"GetMaxResize", -- Returns the maximum size of the frame for user resizing
		"GetMinResize", -- Returns the minimum size of the frame for user resizing
		"GetName", -- Returns the widget object's name
		"GetNumChildren", -- Returns the number of child frames belonging to the frame
		"GetNumPoints", -- Returns the number of anchor points defined for the region
		"GetNumRegions", -- Returns the number of non-frame child regions belonging to the frame
		"GetObjectType", -- Returns the object's widget type
		"GetParent", -- Returns the object's parent object
		"GetPoint", -- Returns information about one of the region's anchor points
		"GetPropagateKeyboardInput", -- Returns whether the frame propagates keyboard events
		"GetRect", -- Returns the position and dimensions of the region
		"GetRegions", -- Returns a list of non-frame child regions belonging to the frame
		"GetRight", -- Returns the distance from the left edge of the screen to the right edge of the region
		"GetScale", -- Returns the frame's scale factor
		"GetScript", -- Returns the widget's handler function for a script
		"GetSize", -- Returns the width and height of the region
		"GetTop", -- Returns the distance from the bottom of the screen to the top of the region
		"GetWidth", -- Returns the width of the region
		"HasScript", -- Returns whether the widget supports a script handler
		"Hide", -- Hides the region
		"HookScript", -- Securely hooks a script handler
		"IgnoreDepth", -- Sets whether the frame's 3D depth property is ignored
		"IsClampedToScreen", -- Returns whether the frame's boundaries are limited to those of the screen
		"IsDragging", -- Returns whether the region is currently being dragged
		"IsEventRegistered", -- Returns whether the frame is registered for a given event
		"IsForbidden", -- Returns if this widget's methods may only be called from secure execution paths
		"IsIgnoringDepth", -- Returns whether the frame's depth property is ignored
		"IsIgnoringParentAlpha", -- Returns if the region is ignoring it's parent alpha changes
		"IsIgnoringParentScale", -- Returns if the region is ignoring it's parent scale changes
		"IsJoystickEnabled", -- Returns whether joystick interactivity is enabled for the frame
		"IsKeyboardEnabled", -- Returns whether keyboard interactivity is enabled for the frame
		"IsMouseClickEnabled", -- Returns whether mouse click interactivity is enabled for the frame
		"IsMouseEnabled", -- Returns whether mouse interactivity is enabled for the frame
		"IsMouseMotionEnabled", -- Returns whether mouse motion interactivity is enabled for the frame
		"IsMouseOver", -- Returns whether the mouse cursor is over the given region
		"IsMouseWheelEnabled", -- Returns whether mouse wheel interactivity is enabled for the frame
		"IsMovable", -- Returns whether the frame can be moved by the user
		"IsObjectLoaded", -- Returns whether the object is loaded
		"IsObjectType", -- Returns whether the object belongs to a given widget type
		"IsProtected", -- Returns whether the region is protected
		"IsRectValid", -- Returns whether the region's rect size is valid
		"IsResizable", -- Returns whether the frame can be resized by the user
		"IsShown", -- Returns whether the region is shown
		"IsToplevel", -- Returns whether the frame is automatically raised to the front when clicked
		"IsUserPlaced", -- Returns whether the frame is flagged for automatic saving and restoration of position and dimensions
		"IsVisible", -- Returns whether the region is visible
		"Lower", -- Reduces the frame's frame level below all other frames in its strata
		"Raise", -- Increases the frame's frame level above all other frames in its strata
		"RegisterAllEvents", -- Registers the frame for all events
		"RegisterEvent", -- Registers the frame for an event
		"RegisterForDrag", -- Registers the frame for dragging
		"RegisterUnitEvent", -- Registers the frame for an event for the specified units
		"SetAllPoints", -- Sets all anchor points of the region to match those of another region
		"SetAlpha", -- Sets the opacity of the region relative to it's parent
		"SetAttribute", -- Sets a secure frame attribute
		"SetBackdrop", -- Sets a backdrop graphic for the frame
		"SetBackdropBorderColor", -- Sets a shading color for the frame's border graphic
		"SetBackdropColor", -- Sets a shading color for the frame's background graphic
		"SetClampedToScreen", -- Sets offsets from the frame's edges used when limiting user movement or resizing of the frame
		"SetClampRectInsets", -- Sets whether the frame's boundaries should be limited to those of the screen
		"SetClipsChildren", -- Sets whether the frame's childrens are clipped off when exceeding the it's boundaries
		"SetColorHSV", -- Sets the color picker's selected color by hue, saturation and value
		"SetColorRGB", -- Sets the color picker's selected color by red, green and blue components
		"SetColorValueTexture", -- Sets the texture object used to display the color picker's value slider
		"SetColorValueThumbTexture", -- Sets the texture for the color picker's value slider thumb
		"SetColorWheelTexture", -- Sets the texture object used to display the color picker's hue/saturation wheel
		"SetColorWheelThumbTexture", -- Sets the texture for the selection indicator on the color picker's hue/saturation wheel
		"SetDepth", -- Sets the 3D depth of the frame
		"SetDontSavePosition", -- Set whether the position are included for the automatic saving and restoration
		"SetFlattensRenderLayers", -- Sets the frame's childrens to be rendered at the same layer level
		"SetForbidden", -- Sets whether the modification of the object's secure methods are forbidden while in combat
		"SetFrameLevel", -- Sets the level at which the frame is layered relative to others in its strata
		"SetFrameStrata", -- Sets the general layering strata of the frame
		"SetHeight", -- Sets the region's height
		"SetHitRectInsets", -- Sets the insets from the frame's edges which determine its mouse-interactable area
		"SetHyperlinksEnabled", -- Sets whether the hyperlinks in the frame's text are interactive
		"SetID", -- Sets a numeric identifier for the frame
		"SetIgnoreParentAlpha", -- Sets if the region should ignore it's parent alpha changes
		"SetIgnoreParentScale", -- Sets if the region should ignore it's parent scale changes
		"SetMaxResize", -- Sets the maximum size of the frame for user resizing
		"SetMinResize", -- Sets the minimum size of the frame for user resizing
		"SetMouseClickEnabled", -- Sets whether the frame can be clicked by the mouse
		"SetMouseMotionEnabled", -- Sets whether the frame's mouse motion is enabled
		"SetMovable", -- Sets whether the frame can be moved by the user
		"SetParent", -- Sets another frame the parent of this region
		"SetPoint", -- Sets an anchor point for the region
		"SetPropagateKeyboardInput", -- Sets whether the frame propagates the keyboard events
		"SetResizable", -- Sets whether the frame can be resized by the user
		"SetScale", -- Sets the frame's scale factor
		"SetScript", -- Sets the widget's handler function for a script
		"SetShown", -- Sets whether the region should be visible or hidden
		"SetSize", -- Sets the size of the region to the specified values
		"SetToplevel", -- Sets whether the frame should automatically come to the front when clicked
		"SetUserPlaced", -- Sets the frame for automatic saving and restoration of position and dimensions
		"SetWidth", -- Sets the region's width
		"Show", -- Shows the region
		"StartMoving", -- Begins repositioning the frame via mouse movement
		"StartSizing", -- Begins resizing the frame via mouse movement
		"StopAnimating", -- Stops any active animations involving the region or it's children
		"StopMovingOrSizing", -- Ends movement or resizing of the frame initiated with
		"UnregisterAllEvents", -- Unregisters the frame from any events for which it is registered
		"UnregisterEvent", -- Unregisters the frame for an event
	},
}]]></content>
	<tabTrigger>_ColorSelect</tabTrigger>
	<description>help</description>
	<scope>source.lua - entity - punctuation - keyword - string</scope>
</snippet>
